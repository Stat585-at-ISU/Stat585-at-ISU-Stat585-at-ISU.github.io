{
  "hash": "0bae3f78349da4785720cf36e7e2e85c",
  "result": {
    "markdown": "---\nauthor: Muxin Hua\ndate: 2023-01-26\ncategories: \"Asking Good Questions\"\ntitle: Asking Good Questions\n---\n\n\n## Prompt:\n\nAsking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare.\nThe links posted here give some advice on how to ask good questions:\n\n- stackoverflow's [Asking a good question](http://stackoverflow.com/help/how-to-ask)\n\n- R's [Posting guidelines](https://www.r-project.org/posting-guide.html)\n\n- [minimal complete verifiable example](https://stackoverflow.com/help/mcve), [minimal reproducible example](https://www.tidyverse.org/help/)\n\nFollow these links and read through the advice given, then\n\n1. **Pick at least one question from stackoverflow or the R help and answer it.**\n\nWrite a blog post answering the following questions: \n\n2. **Document which question you answered (link to your answer).**        \n\nhttps://stackoverflow.com/questions/75344221/how-to-combine-2-lists-in-equal-parts/75363707#75363707\n\n3. **Relate your experience of answering the question to your reading.**\n\nI chose a question specifically about merging list. The author nicely and clearly stated the problem. According to \"How do I ask a good question\" in stackoverflow, it does very good on *help others reproduce the problem*, because the author gave example of how the results should look like, that makes the problem comprehensible. The author also didn't specify the language to solve the problem, which looks more like asking for help in \"logic\" behind the question rather than limiting to \"getting the answer\". This should be inspiring to the ones need such help.\n\n<!--Go to [https://github.com/Stat585-at-ISU/blog](https://github.com/Stat585-at-ISU/blog) for instructions about how to prepare and submit your blog post.-->\n<!-- Instructions to follow. -->",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}