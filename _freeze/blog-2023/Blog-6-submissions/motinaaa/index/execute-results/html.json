{
  "hash": "921c2a79f82383a8540b658ea86dfe46",
  "result": {
    "markdown": "---\nauthor: \"Motina\"\ntitle: \"Badge is Coool!\"\ncategories: \"More on reproducibility...\"\ndate: \"2023-03-02\"\noutput: github_document\n---\n\n\n<!-- README.md is generated from README.Rmd. Please edit that file -->\n<!-- badges: start -->\n[![Frontmatter check](../../actions/workflows/check-yaml.yaml/badge.svg)](../../actions/workflows/check-yaml.yaml)\n[![Render rmarkdown](../../actions/workflows/render-rmarkdown.yaml/badge.svg)](../../actions/workflows/render-rmarkdown.yaml)\n<!-- badges: end -->\n\nWhat happens when we change the Rmd file and commit?\n\nIn Blog 5 you had the first exposure to Github Actions. \nWe just checked frontmatter compliance (as we do for this round).\nYou see that we have added a second action - here, we are converting the Rmarkdown document to a markdown file by running `render_rmarkdown` on Github. This action passes successfully for this document. We want to do something similar for blog #4.\n\n\nNow start reading ...\n\n\nRead the vignette [Introduction to renv](https://rstudio.github.io/renv/articles/renv.html) for the `renv` R package by Kevin Ushey.\n\nThen do:\n\n1. **Install the R package `renv` on your local machine.**\n\n2. **In the project for blog 4, initialize the workflow used by the `renv` package.**\n\n3. **Add all dependencies to the environment (implicitly by installing all the depepndencies or explicilty by listing dependencies in a DESCRIPTION file).**\n\n4. **Add the `renv` folder to your blog 4 repository, and push the changes.**\n\n5. **Is the github action working? Read any potential error messages in the workflow and try to fix things. Make sure to check stackoverflow for help, don't forget our Discussion board!**\n\nYes! It's working :)\n\nWrite a blog post addressing the following questions: \n\n1. **What is the idea of the renv package?**\n\nR package dependencies are easier to manage and reproducible environments are easier to create with the `renv` package. The use of renv means you will spend less time worrying about package version mismatches and more time developing or analyzing.\n\n2. **In 50 to 100 words describe your experience working with `renv`. What went well? What did not go so well?**\n \nBefore I pushed the changes to my blog4 repo, I did a few things to make sure everything was in order.\n\nFirst, I hit up \"renv::init()\" to get my R environment all set up for this project.\n\nThen I called \"renv::dependencies\" to make sure all my package dependencies were good to go.\n\nAfter that, I hit up \"renv::snapshot()\" to save my project library in case I needed to roll back my updates.\n\nNext, I added \"check-yaml.yaml\" to my workflow folder because the badge code shows the status of the workflow defined in my \".github/workflows\" directory. I also added \"schema.json\" and \"schema.yaml\" to my \".github\" folder and copied and pasted the ymal and json code from blog 5.\n\nThat's when I spotted a problem: the ymal in the read.rmd file for blog 4 was messed up. The dates weren't in quotation marks \"\", and the categories were spelled like \"category.\" So, I fixed those issues and pushed everything up to my repo. Easy peasy!\nI followed the same process for blog 6, and now both badges are showing \"passing.\" \n\n\n\nSubmit this blog post to your blog-6 repo. \n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}