{
  "hash": "84e49520e615f8715ba771d4dbac14c5",
  "result": {
    "markdown": "---\nauthor: \"Marie Hardt\"\ntitle: \"Exploring renv\"\ndate: \"2023-03-02\"\ncategories: \"More on reproducibility...\"\noutput: github_document\n---\n\n\n<!-- README.md is generated from README.Rmd. Please edit that file -->\n<!-- badges: start -->\n[![Frontmatter check](../../actions/workflows/check-yaml.yaml/badge.svg)](../../actions/workflows/check-yaml.yaml)\n[![Render rmarkdown](../../actions/workflows/render-rmarkdown.yaml/badge.svg)](../../actions/workflows/render-rmarkdown.yaml)\n<!-- badges: end -->\n\nWhat happens when we change the Rmd file and commit?\n\nIn Blog 5 you had the first exposure to Github Actions. \nWe just checked frontmatter compliance (as we do for this round).\nYou see that we have added a second action - here, we are converting the Rmarkdown document to a markdown file by running `render_rmarkdown` on Github. This action passes successfully for this document. We want to do something similar for blog #4.\n\n\nNow start reading ...\n\n\nRead the vignette [Introduction to renv](https://rstudio.github.io/renv/articles/renv.html) for the `renv` R package by Kevin Ushey.\n\nThen do:\n\n1. **Install the R package `renv` on your local machine.**\n\n2. **In the project for blog 4, initialize the workflow used by the `renv` package.**\n\n3. **Add all dependencies to the environment (implicitly by installing all the dependencies or explicitly by listing dependencies in a DESCRIPTION file).**\n\n4. **Add the `renv` folder to your blog 4 repository, and push the changes.**\n\n5. **Is the github action working? Read any potential error messages in the workflow and try to fix things. Make sure to check stackoverflow for help, don't forget our Discussion board!**\n\n\nWrite a blog post addressing the following questions: \n\n1. **What is the idea of the renv package?**\n\nThe idea of the `renv` package is to help with reproducibility by keeping track of what your `R` environment looks like as you work. The `renv` package saves all of the packages you install within your `R` project along with their versions. This means that you can be sure that if you leave your work and come back to it later, you can recreate an identical `R` environment to the one you were using before. This helps to ensure that you can reproduce your results as they were previously.\n\n2. **In 50 to 100 words describe your experience working with `renv`. What went well? What did not go so well?**\n \nI was initially confused about whether the R code for implementing renv should be included in my RMarkdown. After learning the code was not needed, the next hurdle for me was which renv files should be committed to GitHub. Then I learned I needed to commit the renv folder and the lockfile. The last hurdle to be overcome was the R version in the lockfile. I use R 4.1.2, but GitHub uses R 4.2.2. I changed the R version in the lockfile to 4.2.2, and after not rendering at first, the RMarkdown file then rendered properly after another commit later.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}