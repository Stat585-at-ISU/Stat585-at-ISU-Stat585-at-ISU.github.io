{
  "hash": "4495a0412c27485421a29559a817d094",
  "result": {
    "markdown": "---\nauthor: \"Valerie Han\"\ntitle: \"renv\"\ncategories: \"More on reproducibility...\"\ndate: \"2023-03-02\"\noutput: github_document\n---\n\n\n<!-- README.md is generated from README.Rmd. Please edit that file -->\n<!-- badges: start -->\n[![Frontmatter check](../../actions/workflows/check-yaml.yaml/badge.svg)](../../actions/workflows/check-yaml.yaml)\n[![Render rmarkdown](../../actions/workflows/render-rmarkdown.yaml/badge.svg)](../../actions/workflows/render-rmarkdown.yaml)\n<!-- badges: end -->\n\nWhat happens when we change the Rmd file and commit?\n\nIn Blog 5 you had the first exposure to Github Actions. \nWe just checked frontmatter compliance (as we do for this round).\nYou see that we have added a second action - here, we are converting the Rmarkdown document to a markdown file by running `render_rmarkdown` on Github. This action passes successfully for this document. We want to do something similar for blog #4.\n\n\nNow start reading ...\n\n\nRead the vignette [Introduction to renv](https://rstudio.github.io/renv/articles/renv.html) for the `renv` R package by Kevin Ushey.\n\nThen do:\n\n1. **Install the R package `renv` on your local machine.**\n\n1b. **Go to your blog 4 repo, and run the command** `usethis::use_github_action(\"render-rmarkdown.yaml\")` This creates the file `render-rmarkdown.yaml` inside the folder `.github/workflows` in your repo. Add it to the repository and push it.\n\n\n1c. **Optional - but maybe educational:** make a change to your Rmd file with the blog post (just a small change), and push it. Then go to your github site and watch the render-rmarkdown action fail.\n\n2. **In the project for blog 4, initialize the workflow used by the `renv` package.**\n\n3. **Add all dependencies to the environment (implicitly by installing all the depepndencies or explicilty by listing dependencies in a DESCRIPTION file).**\n\n4. **Add the `renv` folder to your blog 4 repository, and push the changes.**\n\n5. **Is the github action working? Read any potential error messages in the workflow and try to fix things. Make sure to check stackoverflow for help, don't forget our Discussion board!**\n\n\nWrite a blog post addressing the following questions: \n\n1. **What is the idea of the renv package?**\n\nThe `renv` package helps with one piece of reproducibility by recording the versions of R and packages that our project is running on. It also can make it easier to reinstall the version of those packages for a specific project that has had its versions recorded using `renv`.\n\n2. **In 50 to 100 words describe your experience working with `renv`. What went well? What did not go so well?**\n \nIt was really cool to be able to run just a couple functions to record version numbers of R and the packages my project was dependent on. There were a lot of debugging along the way, though. Lessons learned: make sure to add `renv.lock` to the git repo, and try a newer version of a package if you get an error like `Error: install of package 'stringi' failed [error code 1]`. In general, the downside of using `renv` was that the error messages were not as informative as I would've liked, there weren't really stackoverflow posts addressing my errors, and the vignette for the package could've been more informative about troubleshooting/error messages. \n\n\nSubmit this blog post to your blog-6 repo. \n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}