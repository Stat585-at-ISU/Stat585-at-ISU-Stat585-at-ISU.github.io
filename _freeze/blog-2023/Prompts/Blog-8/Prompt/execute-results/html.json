{
  "hash": "abf635fdde5c9792fd11e7181f625a4d",
  "result": {
    "markdown": "---\nauthor: \"Who wrote this\"\ntitle: \"Make your own website -- Prompt 8\"\ncategories: \n  - \"My professional self\"\n  - Prompt\ndate: 2023-03-23\n---\n\n\n## Prompt:\n\nGitHub is an incredibly useful tool for project management and collaboration. It also has several useful features for professional promotion: you can host your own site on github using [GitHub pages](https://pages.github.com/), describe yourself using a GitHub developer profile, and even use [resume.github.io](http://resume.github.io/) to generate a resume summary of your activity on GitHub (you must opt-in by [starring the project page](https://github.com/resume/resume.github.com)). \n\nposit and the associated package infrastructure provide multiple ways to generate websites using Quarto (or Rmarkdown). You can complete this assignment using one of two options: \n\n- Simple RMarkdown websites    \nFor more information about simple R Markdown websites, please read the documentation at https://bookdown.org/yihui/rmarkdown/rmarkdown-site.html. Simple R Markdown sites are _not_ based on **blogdown**. They are probably good for websites with only a few Rmd documents.\n\n- [Quarto](https://quarto.org/docs/websites/)    \nFor larger-scale and more sophisticated websites (such as blogs), you may want to use **Quarto** instead: https://quarto.org/docs/websites/.\n\n## Instructions:\n\n1. Create a new GitHub repository named `<your-username>.github.io` (replacing \"<your-username>\" with your GitHub username). Initialize this repo with a readme.\n\n2. Set up your website using either the Simple Markdown Site or the Quarto instructions below. If you would like to use this repository to host a blog, you may find Quarto to be a more convenient option, however, it is (just a bit) more complicated than the simple Rmarkdown site. \n\n3. Write about you experience -- and link to your new website! \n\nTo get full marks for this blog post, you should modify your site beyond the default template files, adding at least some content that is unique to you - packages you find interesting, sites you enjoy, projects you have worked on, a page with your CV, etc.\n\n\n### Simple RMarkdown Site\n\n1. Use RStudio and set up a new project on your machine linked to the GitHub repository you just created. \n\n2. Create two files in your project folder:\n    - `_site.yml`:\n      ```\n      name: \"my-website\"\n      output_dir: \".\"\n      navbar:\n        title: \"My Website\"\n        left:\n          - text: \"Home\"\n            href: index.html\n      ```\n    \n    - `index.Rmd`\n      ```\n      ---\n      title: \"My Website\"\n      ---\n      \n      Hello, Website!\n      ```\n\n3. Use the commmand `rmarkdown::render_site()` to build your website (Or click the \"Build Website\" button under the Build tab in RStudio). This command will compile any R markdown document in the main project directory to HTML (even if it is not mentioned in `_site.yml`). \n\n4. Push your site to GitHub. In this instance, you want to include the HTML files that were rendered, the `site_libs` directory, the `_site.yml` file used to configure the build process, and the Rmd files used to render the HTML files.\n\n5. Customize your site. Remember to use the command `rmarkdown::render_site()` before you push your changes so that the HTML is updated!\n    - Modify `_site.yml` to update the header structure, add links to other files, etc. \n    - Modify `index.Rmd` to add content to the landing page of your site. You might think about including a link to your CV on this page. \n    - Add new Rmd files to add new pages to your site. Consider adding a page describing your favorite packages, or pages for different projects you've worked on. \n    \n    \n### Quarto\n\n1. Install/Update the `quarto` package (`install.packages(\"quarto\")`)\n\n2. Create a new folder where you will store your blog and the rendered site.\n\n3. Use RStudio to create a new project inside the folder you created in step 2. Select either the Option \"Quarto Website\" or \"Quarto Blog\" as the project type.\n\n4. Follow the Quick Start instructions on https://quarto.org/docs/websites/ or https://quarto.org/docs/websites/website-blog.html to create your website.\n\n5. For publishing your website, follow the steps described under [Github Pages](https://quarto.org/docs/publishing/github-pages.html). You can try to build the site automatically, but fair warning: I went back to build to docs and render the site myself. \n\n6. VERY IMPORTANT. Open the \"username.github.io\" project. Add a text file named \".nojekyll\" (the file should be empty). This tells GitHub not to build the pages with Jekyll (another rendering engine) and instead render pages built with Quarto.\n\n\n## Submission\n\nDescribe your experience the `README.Rmd` of the blog-8 repo. Don't forget to link to your website! Push the blog post to your blog-8 repo. Make sure that all of the checks are passing.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}