{
  "hash": "0492dbd37b78a34660b2fd353a385aa2",
  "result": {
    "markdown": "---\ntitle: \"Reflections on Ethical Web Scraping\"\nauthor: \"Kelly Nascimento Thompson\"\ndate: \"2023-04-06\"\ncategories: \"Web scraping etiquette ...\"\noutput: github_document\n---\n\n \n## Prompt:\n\nWith great power comes great responsibility - a large part of the web is based on data and services that scrape those data. \nNow that we start to apply scraping mechanisms, we need to think about how to apply those skills without becoming a burden to the internet society.\n\nFind sources on ethical web scraping - some readings that might help you get started with that are: \n\n  - [James Densmore](https://towardsdatascience.com/ethics-in-web-scraping-b96b18136f01)\n\n  - R package [polite](https://github.com/dmi3kno/polite)\n\n  - [JAMI @ EMPIRICAL](https://www.empiricaldata.org/dataladyblog/a-guide-to-ethical-web-scraping)\n\n\nAfter reading through some of the ethics essays\nwrite a blog post addressing the following questions: \n\n1. **What are your main three takeaways for ethical web scraping? - Give examples, or cite your sources.**\n\n- Ethics and law regarding web data scraping are not same thing and each of them have their own complexity and level of importance as stated by James Densmore, 2017.Another important point brought up is that people scraping data and those providing data have not agreed on basic principles of ethical web scrapping.\n\n- A common point on both articles from James Densmore and JAMI @ EMPIRICAL is that if a data source has an API, we should definitely use it because then we will avoid scraping and will gather the data according to the publisher's rules.\n\n- Return value to data owners from where we scrape information from is another ethical principle and we can do so by referencing where the data came from, so their website can receive some traffic. We can also recognize website's value by citing them in articles or posts.\n\n2. **What is a ROBOTS.TXT file? Identify one instance and explain what it allows/prevents.**\n\n- They are part of the Robots Exclusion Protocol (REP) and they regulate what is allowed or not when conducting data web scrapping. This text file provides instructions for search engine robots how to scrape and index pages on websites.\n\n- Example: Blocking a folder. In some cases, website owners want to block a certain area of the website and give access to the rest. To do so, website owners create a admin area allowing only admins with a login to make content changes on their page.\nThey do not want bots looking into this admin folder, so they block it by doing:\n\n        User-agent: *\n        Disallow: /admin/\n\n  By doing this, the bots will not access the admin folder.\n\n  Source: https://pagedart.com/blog/robots-txt-file-example/\n\n3. **Identify a website that you would like to scrape (or one an example from class) and implement a scrape using the `polite` package.**\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-1_f5fbd9ac540919592d59e98661b3cf8b'}\n\n```{.r .cell-code}\n# Types of cheese from Brazil\nlibrary(polite)\nlibrary(rvest)\n\nsession <- bow(\"https://www.cheese.com/by_country/?per_page=20&c=BR#top\", force = TRUE)\nresult <- scrape(session, query=list(t=\"Brazil\", per_page=20)) %>%\n  html_node(\"#main-body\") %>% \n  html_nodes(\"h3\") %>% \n  html_text()\nresult\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Canastra cheese\" \"Catupiry\"        \"Coalho\"          \"Colony cheese\"  \n[5] \"Minas cheese\"    \"Queijo do serro\" \"Requeson\"       \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}