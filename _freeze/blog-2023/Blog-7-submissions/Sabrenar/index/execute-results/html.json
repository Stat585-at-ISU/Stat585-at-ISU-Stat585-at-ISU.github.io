{
  "hash": "6250ce377e33b7fe405df0cba7d82b13",
  "result": {
    "markdown": "---\ntitle: \"Licenses and Packages\"\nauthor: \"Sabrena Rutledge\"\ndate: \"2023-03-09\"\ncategories: \"All that legal stuff...\"\n\noutput:\n  html_document: default\n  github_document: default\n---\n\n\n<!-- README.md is generated from README.Rmd. Please edit that file -->\n<!-- badges: start -->\n[![Frontmatter check](../../actions/workflows/check-yaml.yaml/badge.svg)](../../actions/workflows/check-yaml.yaml)\n[![Render rmarkdown](../../actions/workflows/render-rmarkdown.yaml/badge.svg)](../../actions/workflows/render-rmarkdown.yaml)\n<!-- badges: end -->\n  \n\n## Prompt:\n\nThe `DESCRIPTION` file of a package contains the package's meta information. Most of the fields in this file are quite straight forward: author, version number, and a short package description. When you call `library(help=\"<package name>\")` for  package `<package name>` you can see the contents of the `DESCRIPTION` file for that package (and some parts of the `NAMESPACE` file).\n\nRead through Colin Fay's (short) book on [Licensing R](https://thinkr-open.github.io/licensing-r/)\n\nWrite a blog post addressing the following questions: \n\n### Under what license does R operate? What is the license for ggplot2?\n\nR operates under versions 2 and 3 of a GNU General Public License with “absolutely no warranty.” The specifics of the two licenses can be found from RShowDoc(\"COPYING\") and RShowDoc(\"GPL-3\") respectively.\nMeanwhile ggplot2 has a MIT license that allows permission to anyone who obtains a copy of the ggplot2 software. \n\n\n### What are the dependencies of the package you made?\n\nRead through [chapter 5.2 of Licensing R](https://thinkr-open.github.io/licensing-r/practical.html#dependencies-exploration). Combine and adjust the code pieces to create the dependencies for a package that is on github rather than CRAN. (Don't forget about the package `desc`.) What dependencies does the package have that you created for Lab-3? \nThe dependencies of the lab3 package are tabulizer, dplyr, tidyr, tibble, lubridate, RCurl, cli, fansi, generics, glue, lifecycle, magrittr, methods, pillar, pkgconfig, purr, R6, rlang, stingr, tidyselect, timechange, utils, vctrs, grDevices, utf8, withr, graphics, png, rJava, tabulizerjars, tools, and stats.\n\nWhich licenses are involved? \nThese dependencies mostly have an MIT + file license, but two have GPL-3 license. Additionally only utf8 has an Apache License (== 2.0) | file license. \n\nAre all of these dependencies required? Elaborate.\nNot all of these dependencies are required. The following are not required: methods, utils, graphics, grDevices, tools, and stats. \nIn order to determine whether a package was required, I found the list of packages in my library and found those that are not present. Those dependencies that are not present must not be required to run the created package.\n\nUnder which license should this blog post be published? Make sure that you are using an appropriate license. (You can change the current licenses with the help of commands from the `use_license_XXX` family in the `usethis` package)\nSince there are no dependencies, data, or code contained within this blog, this blog should be published with an MIT license.\n\n\n### Can I publish an R package on CRAN under an MIT license when I have a dependency on a package that is licensed under GPL-3?\n\nWhen confronted with the above question, ChatGPT gave two -- quite different -- responses, as shown below. \nThe main point in both responses is 'your package may be considered  derivative work'. At the specific problem of the package developed for Lab 3, what is your opinion about potential copyright infringements when releasing the package with an MIT license? Make sure to take the relevant passage in Colin Fay's book under consideration.\n\n```\nThe legal implications of publishing an R package on CRAN under an MIT license while having a dependency on a package that is licensed under GPL-3 are complex and can vary depending on the specific circumstances. It is always advisable to seek legal advice from a licensed attorney if you have any doubts or concerns about licensing issues.\n\nHowever, in general, it is possible to publish an R package on CRAN under an MIT license when you have a dependency on a package that is licensed under GPL-3. This is because the MIT license is a permissive open-source license that allows for more flexibility in how the software can be used and distributed, and it is generally considered compatible with the GPL-3 license.\n\nThat being said, if your package depends on a GPL-3-licensed package, your package may be considered a derivative work and therefore subject to the terms of the GPL-3 license. This means that if you distribute your package, you may need to also distribute the source code for your package under the GPL-3 license or a compatible license, and you may need to ensure that the requirements of the GPL-3 license are met for the entire distribution, including any dependencies.\n\nIt is also worth noting that the R community has its own guidelines and recommendations for package licensing, and it is important to comply with these guidelines if you want to publish your package on CRAN. The CRAN Repository Policy states that packages should have a \"permissive\" or \"GPL-compatible\" license, but does not explicitly require that packages use the GPL license or any other specific license.\n\nIn summary, while it is possible to publish an R package on CRAN under an MIT license while having a dependency on a package that is licensed under GPL-3, it is important to understand the implications of the different licenses and to ensure that you comply with any applicable guidelines and recommendations from the R community.\n```\n\nAfter harping a bit on copyright infringement in general, ChatGPT changed its response to\n\n```\nTechnically, you can publish an R package on CRAN under an MIT license when you have a dependency on a package that is licensed under GPL-3, but doing so would not be compliant with the terms of the GPL-3 license.\n\nThe GPL-3 license is a strong copyleft license that requires derivative works to be released under the same license. If your package depends on a GPL-3-licensed package, your package may be considered a derivative work and therefore must be licensed under the GPL-3 license or a compatible license.\n\nThe MIT license, on the other hand, is a permissive license that allows for more flexibility in how the software is used and distributed. However, it is not compatible with the GPL-3 license, and therefore cannot be used for derivative works of GPL-3-licensed software.\n\nPublishing an R package on CRAN under an MIT license when you have a dependency on a package that is licensed under GPL-3 would be a licensing violation, and could potentially result in legal action or other consequences. It is important to comply with the licensing requirements of all dependencies in your package to avoid any legal issues.\n```\n\nThe 'harping' questions:\n\n- Is it legal to publish an R package on CRAN under an MIT license when I have a dependency on a package that is licensed under GPL-3?\n\n- Is it illegal to publish an R package on CRAN under an MIT license when I have a dependency on a package that is licensed under GPL-3?\n\n- Is it a copyright infringement to publish an R package on CRAN under an MIT license when I have a dependency on a package that is licensed under GPL-3?\n\n- Can I publish an R package on CRAN under an MIT license when I have a dependency on a package that is licensed under GPL-3 without infringing copyright?\n\n\nAnswering the above question in regards to lab 3:\nWhile Colin Fay’s book gave an excellent way to check the various licenses of all dependencies, he did not provide an opinion about potential copyright infringement when releasing packages with an MIT license. It seems as though as long as there was no restricted-use licenses, releasing a package with a MIT license is fine. \nIn terms of the specifics of releasing a package with an MIT license when a dependency has a GPL-3 license, I am of the opinion that since GPL-3 specifies that “you have the freedom to change the software or use pieces of it in new free programs” and that “if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received.  You must make sure that they, too, receive or can get the source code.”\nAs such, if a new program is using a dependency as it is intended and is not claiming the work as its own (by listing the dependencies), then this falls under the rights of the user by the GPL3 license. Thus, in these circumstances it is acceptable to release a MIT license package despite having a GPL3 license dependency. \nAs to the specifics of lab 3, the only required packages are tidyverse (including its sub-packages lubridate and tibble) and tabulizer. Both tidyverse and tabulizer have MIT licenses, so the above question is not applicable. \n\n\n\n## Submission\n\nWrite answers to the questions directly into the file `README.Rmd`. Push the blog post to your blog-7 repo. Make sure that all of the checks are passing.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}