{
  "hash": "0b07253b36740b7baf63aa4c130ad70a",
  "result": {
    "markdown": "---\ntitle: \"All that legal stuff...\"\ncategories: \"All that legal stuff...\"\ndate: \"2023-03-09\"\nauthor: \"Atefeh Anisi\"\noutput:\n html_document: default\n github_document: default\n---\n\n\n<!-- README.md is generated from README.Rmd. Please edit that file -->\n<!-- badges: start -->\n[![Frontmatter check](../../actions/workflows/check-yaml.yaml/badge.svg)](../../actions/workflows/check-yaml.yaml)\n[![Render rmarkdown](../../actions/workflows/render-rmarkdown.yaml/badge.svg)](../../actions/workflows/render-rmarkdown.yaml)\n<!-- badges: end -->\n  \n\n## Prompt:\n\nThe `DESCRIPTION` file of a package contains the package's meta information. Most of the fields in this file are quite straight forward: author, version number, and a short package description. When you call `library(help=\"<package name>\")` for  package `<package name>` you can see the contents of the `DESCRIPTION` file for that package (and some parts of the `NAMESPACE` file).\n\nRead through Colin Fay's (short) book on [Licensing R](https://thinkr-open.github.io/licensing-r/)\n\nWrite a blog post addressing the following questions: \n\n### Under what license does R operate? What is the license for ggplot2?\n\nFree software known as R was made available under the terms of the GNU General Public License, either version 2 (June 1991) or version 3 (as of the time of writing) (June 2007). I was able to obtain it by using R's \"licence()\" function. The MIT + file License governs the distribution of the ggplot2 package.\n\n### What are the dependencies of the package you made?\n\nRead through [chapter 5.2 of Licensing R](https://thinkr-open.github.io/licensing-r/practical.html#dependencies-exploration). Combine and adjust the code pieces to create the dependencies for a package that is on github rather than CRAN. (Don't forget about the package `desc`.) What dependencies does the package have that you created for Lab-3? \nWhich licenses are involved? \nAre all of these dependencies required? Elaborate.\n\nFirst, as described in Chapter 5.2, I utilized the code and regenerated the results for the golem package. Then, I repeated the process for the package we created for Lab 3 called AmesPD. The outcome for package dependencies is as follows:\n\n![](1.png){width=\"100%\"}\nThere were 29 observations for dependencies, and the picture above shows the first six observations.\nThen, I counted the licenses for these dependencies:\n\n![](2.png){width=\"100%\"}\n\nThis code was for exploring the dependencies of a R package on CRAN. If we want to do the same for a package in GitHub, we need to just install the package and call the library. Then we can find it's dependencies using the same method.\n\n\n\nUnder which license should this blog post be published? Make sure that you are using an appropriate license. (You can change the current licenses with the help of commands from the `use_license_XXX` family in the `usethis` package)\n\nWe are currently using license CC0 1.0 Universal which is in LICENSE file. It seems that there are different licenses which gives the user enough information about the repository and it's files. The license make the user understood that what parts or files he/she can use, and also protect the author rights. We can change the license type, but I won't do this. For example CC is the keyword of Creative Commons license family.\n\n### Can I publish an R package on CRAN under an MIT license when I have a dependency on a package that is licensed under GPL-3?\n\nWhen confronted with the above question, ChatGPT gave two -- quite different -- responses, as shown below. \nThe main point in both responses is 'your package may be considered  derivative work'. At the specific problem of the package developed for Lab 3, what is your opinion about potential copyright infringements when releasing the package with an MIT license? Make sure to take the relevant passage in Colin Fay's book under consideration.\n\n\nAccording to the Colin Fay book, a package that is GPL-3 licensed is compatible with and recognized by the CRAN policy. As a result, it is conceivable to publish it in CRAN, although doing so requires the consent of every author. The contributors' discussion and announcement of permissions may take place on Github.\n\n\n\n```\nThe legal implications of publishing an R package on CRAN under an MIT license while having a dependency on a package that is licensed under GPL-3 are complex and can vary depending on the specific circumstances. It is always advisable to seek legal advice from a licensed attorney if you have any doubts or concerns about licensing issues.\n\nHowever, in general, it is possible to publish an R package on CRAN under an MIT license when you have a dependency on a package that is licensed under GPL-3. This is because the MIT license is a permissive open-source license that allows for more flexibility in how the software can be used and distributed, and it is generally considered compatible with the GPL-3 license.\n\nThat being said, if your package depends on a GPL-3-licensed package, your package may be considered a derivative work and therefore subject to the terms of the GPL-3 license. This means that if you distribute your package, you may need to also distribute the source code for your package under the GPL-3 license or a compatible license, and you may need to ensure that the requirements of the GPL-3 license are met for the entire distribution, including any dependencies.\n\nIt is also worth noting that the R community has its own guidelines and recommendations for package licensing, and it is important to comply with these guidelines if you want to publish your package on CRAN. The CRAN Repository Policy states that packages should have a \"permissive\" or \"GPL-compatible\" license, but does not explicitly require that packages use the GPL license or any other specific license.\n\nIn summary, while it is possible to publish an R package on CRAN under an MIT license while having a dependency on a package that is licensed under GPL-3, it is important to understand the implications of the different licenses and to ensure that you comply with any applicable guidelines and recommendations from the R community.\n```\n\nAfter harping a bit on copyright infringement in general, ChatGPT changed its response to\n\n```\nTechnically, you can publish an R package on CRAN under an MIT license when you have a dependency on a package that is licensed under GPL-3, but doing so would not be compliant with the terms of the GPL-3 license.\n\nThe GPL-3 license is a strong copyleft license that requires derivative works to be released under the same license. If your package depends on a GPL-3-licensed package, your package may be considered a derivative work and therefore must be licensed under the GPL-3 license or a compatible license.\n\nThe MIT license, on the other hand, is a permissive license that allows for more flexibility in how the software is used and distributed. However, it is not compatible with the GPL-3 license, and therefore cannot be used for derivative works of GPL-3-licensed software.\n\nPublishing an R package on CRAN under an MIT license when you have a dependency on a package that is licensed under GPL-3 would be a licensing violation, and could potentially result in legal action or other consequences. It is important to comply with the licensing requirements of all dependencies in your package to avoid any legal issues.\n```\n\nThe 'harping' questions:\n\n- Is it legal to publish an R package on CRAN under an MIT license when I have a dependency on a package that is licensed under GPL-3?\n\n- Is it illegal to publish an R package on CRAN under an MIT license when I have a dependency on a package that is licensed under GPL-3?\n\n- Is it a copyright infringement to publish an R package on CRAN under an MIT license when I have a dependency on a package that is licensed under GPL-3?\n\n- Can I publish an R package on CRAN under an MIT license when I have a dependency on a package that is licensed under GPL-3 without infringing copyright?\n\n\n## Submission\n\nWrite answers to the questions directly into the file `README.Rmd`. Push the blog post to your blog-7 repo. Make sure that all of the checks are passing.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}