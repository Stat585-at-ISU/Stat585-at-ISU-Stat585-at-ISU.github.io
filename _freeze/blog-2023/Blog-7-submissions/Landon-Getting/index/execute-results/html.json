{
  "hash": "c62c99f907ebfdbce0efaa4df364d207",
  "result": {
    "markdown": "---\nauthor: \"Landon Getting\"\ntitle: \"Learning Licensing\"\ncategories: \"All that legal stuff...\"\ndate: \"2023-03-09\"\noutput:\n  github_document: default\n---\n\n\n<!-- README.md is generated from README.Rmd. Please edit that file -->\n\n<!-- badges: start -->\n\n[![Frontmatter check](https://github.com/Stat585-at-ISU/blog-7-Landon-Getting/actions/workflows/check-yaml.yaml/badge.svg)](https://github.com/Stat585-at-ISU/blog-7/actions/workflows/check-yaml.yaml)\n[![Render rmarkdown](https://github.com/Stat585-at-ISU/blog-7-Landon-Getting/actions/workflows/render-rmarkdown.yaml/badge.svg)](https://github.com/Stat585-at-ISU/blog-7/actions/workflows/render-rmarkdown.yaml)\n\n<!-- badges: end -->\n\n### Under what license does R operate? What is the license for ggplot2?\n\nR operates under either V1 or V2 of the GNU General Public License.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-1_45c769d012e6a6b8febeffce10be98c3'}\n\n```{.r .cell-code}\nlicense()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nThis software is distributed under the terms of the GNU General\nPublic License, either Version 2, June 1991 or Version 3, June 2007.\nThe terms of version 2 of the license are in a file called COPYING\nwhich you should have received with\nthis software and which can be displayed by RShowDoc(\"COPYING\").\nVersion 3 of the license can be displayed by RShowDoc(\"GPL-3\").\n\nCopies of both versions 2 and 3 of the license can be found\nat https://www.R-project.org/Licenses/.\n\nA small number of files (the API header files listed in\nR_DOC_DIR/COPYRIGHTS) are distributed under the\nLESSER GNU GENERAL PUBLIC LICENSE, version 2.1 or later.\nThis can be displayed by RShowDoc(\"LGPL-2.1\"),\nor obtained at the URI given.\nVersion 3 of the license can be displayed by RShowDoc(\"LGPL-3\").\n\n'Share and Enjoy.'\n```\n:::\n:::\n\n\nggplot2 utilizes the MIT License as stated in the LICENSE.md file on the GitHub repository.\n\n### What are the dependencies of the package you made?\n\n**Read through [chapter 5.2 of Licensing R](https://thinkr-open.github.io/licensing-r/practical.html#dependencies-exploration). Combine and adjust the code pieces to create the dependencies for a package that is on github rather than CRAN. (Don't forget about the package `desc`.) What dependencies does the package have that you created for Lab-3? (Don't forget about the package `desc`.)**\n\nFirst, download the package from GitHub.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-2_0e448ec54194549cbb6f9cdb7f4289d9'}\n\n```{.r .cell-code}\ndevtools::install_github(\"<author>/<repo name>\")\n```\n:::\n\n\nNext, gather the package information with `devtools::session_info()` and filter to include the data regarding package dependencies. Listed are all the packages dependencies for Lab 3 Team 1.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-3_0a19ca7361720ddd4c8599d5b2f47c8d'}\n\n```{.r .cell-code}\npkg_deps <- devtools::session_info(\"Team1\")$packages \npkg_deps_df <- data.frame(pkg_deps$package, pkg_deps$ondiskversion)\npkg_deps_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   pkg_deps.package pkg_deps.ondiskversion\n1           askpass                    1.1\n2               cli                  3.6.0\n3             cpp11                  0.4.3\n4              curl                  5.0.0\n5             dplyr                  1.1.0\n6             fansi                  1.0.4\n7          generics                  0.1.3\n8              glue                  1.6.2\n9         lifecycle                  1.0.3\n10        lubridate                  1.9.2\n11         magrittr                  2.0.3\n12         pdftools                  3.3.3\n13           pillar                  1.8.1\n14        pkgconfig                  2.0.3\n15              png                  0.1-8\n16            purrr                  1.0.1\n17             qpdf                  1.3.0\n18               R6                  2.5.1\n19             Rcpp                 1.0.10\n20            rJava                  1.0-6\n21            rlang                  1.1.0\n22          stringi                 1.7.12\n23          stringr                  1.5.0\n24              sys                  3.4.1\n25        tabulizer                  0.2.3\n26    tabulizerjars                  1.0.1\n27            Team1             0.0.0.9000\n28           tibble                  3.2.0\n29       tidyselect                  1.2.0\n30       timechange                  0.2.0\n31             utf8                  1.2.3\n32            vctrs                  0.6.0\n33            withr                  2.5.0\n```\n:::\n:::\n\n\n**Which licenses are involved? Are all of these dependencies required? Elaborate.** It looks like the MIT license was utilized. I can confirm this from the LICENSE.md file on the GitHub repo.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-4_aa7c11adb5fa510f4d22bc7d03da17c1'}\n\n```{.r .cell-code}\nutils::packageDescription(\"Team1\", fields=\"License\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"MIT + file LICENSE\"\n```\n:::\n:::\n\n\nThere seems to be more dependencies than I recall, but perhaps these are dependencies of the libraries we utilized. I am not sure of the difference between `$ondiskversion` and `$loadedversion`. It appears that `$ondiskversion` contains versions for every package so I am assuming it is more accurate for determining the required dependencies.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-5_1b1ac749c973a23e26c15abd905fc58d'}\n\n```{.r .cell-code}\nhead(pkg_deps$ondiskversion)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"1.1\"   \"3.6.0\" \"0.4.3\" \"5.0.0\" \"1.1.0\" \"1.0.4\"\n```\n:::\n:::\n\n::: {.cell hash='index_cache/html/unnamed-chunk-6_9eb92e8b83db272fa5b34b66f13d005c'}\n\n```{.r .cell-code}\nhead(pkg_deps$loadedversion)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA      \"3.6.0\" NA      NA      NA      NA     \n```\n:::\n:::\n\n\n**Under which license should this blog post be published? Make sure that you are using an appropriate license. (You can change the current licenses with the help of commands from the `use_license_XXX` family in the `usethis` package)**\n\nAs referenced in section 4.3.1 of Collin's book, online books and blogs may be licensed under CC BY-NC-ND 3.0 US or CC BY-NC-SA 4.0. It may be useful to also include an MIT license for the code within this blog.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-7_01e5dbdd5cc193e1c4705cf0521a5042'}\n\n```{.r .cell-code}\nusethis::use_ccby_license()\n```\n:::\n\n\n### Can I publish an R package on CRAN under an MIT license when I have a dependency on a package that is licensed under GPL-3?\n\n**When confronted with the above question, ChatGPT gave two -- quite different -- responses, as shown below. The main point in both responses is 'your package may be considered derivative work'. At the specific problem of the package developed for Lab 3, what is your opinion about potential copyright infringements when releasing the package with an MIT license? Make sure to take the relevant passage in Colin Fay's book under consideration.**\n\n    The legal implications of publishing an R package on CRAN under an MIT license while having a dependency on a package that is licensed under GPL-3 are complex and can vary depending on the specific circumstances. It is always advisable to seek legal advice from a licensed attorney if you have any doubts or concerns about licensing issues.\n\n    However, in general, it is possible to publish an R package on CRAN under an MIT license when you have a dependency on a package that is licensed under GPL-3. This is because the MIT license is a permissive open-source license that allows for more flexibility in how the software can be used and distributed, and it is generally considered compatible with the GPL-3 license.\n\n    That being said, if your package depends on a GPL-3-licensed package, your package may be considered a derivative work and therefore subject to the terms of the GPL-3 license. This means that if you distribute your package, you may need to also distribute the source code for your package under the GPL-3 license or a compatible license, and you may need to ensure that the requirements of the GPL-3 license are met for the entire distribution, including any dependencies.\n\n    It is also worth noting that the R community has its own guidelines and recommendations for package licensing, and it is important to comply with these guidelines if you want to publish your package on CRAN. The CRAN Repository Policy states that packages should have a \"permissive\" or \"GPL-compatible\" license, but does not explicitly require that packages use the GPL license or any other specific license.\n\n    In summary, while it is possible to publish an R package on CRAN under an MIT license while having a dependency on a package that is licensed under GPL-3, it is important to understand the implications of the different licenses and to ensure that you comply with any applicable guidelines and recommendations from the R community.\n\n**After harping a bit on copyright infringement in general, ChatGPT changed its response to**\n\n    Technically, you can publish an R package on CRAN under an MIT license when you have a dependency on a package that is licensed under GPL-3, but doing so would not be compliant with the terms of the GPL-3 license.\n\n    The GPL-3 license is a strong copyleft license that requires derivative works to be released under the same license. If your package depends on a GPL-3-licensed package, your package may be considered a derivative work and therefore must be licensed under the GPL-3 license or a compatible license.\n\n    The MIT license, on the other hand, is a permissive license that allows for more flexibility in how the software is used and distributed. However, it is not compatible with the GPL-3 license, and therefore cannot be used for derivative works of GPL-3-licensed software.\n\n    Publishing an R package on CRAN under an MIT license when you have a dependency on a package that is licensed under GPL-3 would be a licensing violation, and could potentially result in legal action or other consequences. It is important to comply with the licensing requirements of all dependencies in your package to avoid any legal issues.\n\n**The 'harping' questions:**\n\n-   **Is it legal to publish an R package on CRAN under an MIT license when I have a dependency on a package that is licensed under GPL-3?**\n\n-   **Is it illegal to publish an R package on CRAN under an MIT license when I have a dependency on a package that is licensed under GPL-3?**\n\n-   **Is it a copyright infringement to publish an R package on CRAN under an MIT license when I have a dependency on a package that is licensed under GPL-3?**\n\n-   **Can I publish an R package on CRAN under an MIT license when I have a dependency on a package that is licensed under GPL-3 without infringing copyright?**\n\nAlthough sections 4.1.2 and 4.1.3 by Collin describe this situation, I found section 13.5.1 in [R Packages by Hadley and Jenny](https://r-pkgs.org/license.html) to be more clear. ChatGPT definitely missed the mark on this one. In my opinion, depending on a package with GPL-3 in a package with a MIT license would be a violation of the GPL-3 license. I would be interested to learn if there is any legal precedent for this situation. Is there considerable consequences for violators or is infringement enforced in most cases? According to Hadley and Jenny, over 70% of R packages use copyleft licenses like GPL compared to only 20% using permissive licenses like MIT. I wonder if there are a few important foundation packages like dplyr that have a copyleft license which forces all other packages to utilize a more restrictive license.\n\n## \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}