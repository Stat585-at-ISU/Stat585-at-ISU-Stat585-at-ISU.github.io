{
  "hash": "b9636895caba7465f6f0dcc8db369923",
  "result": {
    "markdown": "---\nauthor: \"Valerie Han\"\ntitle: \"Building a website\"\ncategories: \"My professional self\"\ndate: \"2023-03-23\"\noutput:\n  github_document: default\n---\n\n\n<!-- README.md is generated from README.Rmd. Please edit that file -->\n<!-- badges: start -->\n[![Frontmatter check](../../actions/workflows/check-yaml.yaml/badge.svg)](../../actions/workflows/check-yaml.yaml)\n<!-- badges: end -->\n\n## Prompt:\n\nGitHub is an incredibly useful tool for project management and collaboration. It also has several useful features for professional promotion: you can host your own site on github using [GitHub pages](https://pages.github.com/), describe yourself using a GitHub developer profile, and even use [resume.github.io](http://resume.github.io/) to generate a resume summary of your activity on GitHub (you must opt-in by [starring the project page](https://github.com/resume/resume.github.com)). \n\nposit and the associated package infrastructure provide multiple ways to generate websites using Quarto (or Rmarkdown). You can complete this assignment using one of the two options detailed in [Prompt 8](https://stat585-at-isu.github.io/blog-2023/Prompts/Blog-8/Prompt.html)\n\nDescribe your experience creating your website below. Don't forget to link to your website! Push this blog post to your blog-8 repo. Make sure that all of the checks are passing.\n\n**How did building your own website go?**\n\n\nHere's my website: https://valeriehan6.github.io/.\n\nI chose to use Quarto. The website building itself wasn't too bad since it felt pretty similar to RMarkdown and the changes I made to the layout were straightforward. However, I got frustrated when I was trying to figure out how to publish the website from Github. The rendering to `docs` method did not work for me. I tried re-organizing my file structure to get it to work and added `.nojekyll` files in each layer just to see if it wasn't checking it in the git root directory, but it still only displayed the default page generated from the `README.md` file. I then tried the other method of publishing. Luckily, that method worked after only minor debugging. \n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}