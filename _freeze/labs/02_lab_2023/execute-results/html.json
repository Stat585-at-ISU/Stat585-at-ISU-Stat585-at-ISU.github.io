{
  "hash": "929cf4998974f2729b1c88b5181290aa",
  "result": {
    "markdown": "---\ntitle: 'Lab 2 - Getting that data'\noutput:\n  xaringan::moon_reader:\n    lib_dir: libs\n    nature:\n      highlightStyle: github\n      highlightLines: true\n      countIncrementalSlides: false\n---\n\n\n\n# Outline\n\n- `pdf` files are for text, right?\n\n- Looking under the hood ...\n\n\n\nThe final deliverable is again a self-contained RMarkdown file and a dataset. \n\n---\n\n# Lab organization\n\n1. As last time, there is a github classroom link. Select the invite with your team's number. \n\n2. Hofmann, don't forget the Zoom breakout rooms. Join the room that matches your team number.\n\n3. Final deliverable: submit a link to your repository in Canvas (This will show me that you are done working on your project).\n\n4. Create a folder `data` in the repository. Assume that all of the data files used are inside this folder, similar to the code used in this Rmarkdown file. \n\n\n\n---\n\n# First item: talk!\n\nJust as with lab #1, you are asked to create one file (README.Rmd) with your results. \n\nAll team members are supposed to contribute ... last time you might have realized that it is a pretty big mess if everybody writes into the README file all at the same time.\n\nThis time: figure out a plan before you start working. Include your plan as a table in the README.Rmd file for lab #2. \n\n---\n\n# Our Goal for this lab\n\n- read a pdf file into an R session\n\n- go through cleaning steps to turn the pdf into usable information\n\n- save the resulting code and data files\n\n\n---\n\n# Service calls to the Ames police \n\nare collected and published each day for a time interval of the past four days as 'Press log'\n\nhttps://www.cityofames.org/government/departments-divisions-i-z/police/news-and-updates\n\navailable under \n\nhttps://data.city.ames.ia.us/publicinformation/PressLog.pdf\n\n---\n\n# Download the Press log file\n\nand inspect it ... \n\n\n::: {.cell hash='02_lab_2023_cache/html/unnamed-chunk-1_4228d5579da959da15aac875e6adbf84'}\n\n```{.r .cell-code}\npresslog_url <- \"https://data.city.ames.ia.us/publicinformation/PressLog.pdf\"\ndownload.file(presslog_url, destfile = \"PressLog.pdf\", mode = \"wb\")\n```\n:::\n\n\n---\n\n# Reading a pdf file\n\nThe package `tabulizer` provides bindings (i.e. wrapper functionalities) for the java library Tabula PDF Table Extractor.\n\nOur first goal for the lab is to install the `tabulizer` package.\n\nGo to https://docs.ropensci.org/tabulizer/ and follow the  directions for installing the package\n\n---\n\n# `extract_tables`\n\nThe function `extract_tables` returns a list object. \n\nDescribe the structure of this list:\n\n- What does the length of the list correspond to? \n\n- What objects are the list's items? \n\n- What are the dimensions of each of the list's items? \n\n\n::: {.cell hash='02_lab_2023_cache/html/unnamed-chunk-2_0150dff78b2d23bcbd3341a8bacc174e'}\n\n```{.r .cell-code}\nlibrary(tabulizer)\nplog <- extract_tables(file=\"PressLog.pdf\")\n\nstr(plog)\n```\n:::\n\n---\n\n# Transform the `plog` object into a clean data set\n\nData set of service calls: \n\n- format of object is data frame or tibble\n\n- columns are variables with appropriate names\n\n- each row corresponds to one incident\n\n- all variables have the correct format\n\n- save the result as a csv file with the name \"presslog-yyyymmdd.csv', where yyyymmdd is the date of first reported incident the file \n\n---\n\n\n# Helper files and code\n\nData set of call codes: \n\n- data frame (or tibble) with two columns named 'Abbreviation' and 'Description'\n\n- save the result as a csv file with the name \"call-codes.csv\"\n\nSave the code (just the R script, not an Rmd) in a file called \"process_presslog_yyyymmdd.R\"\n\n\n---\n\n# How robust is your code?\n\nThe folder 'Presslogs' contains service call files from a couple of other days. \n\nProcess these files as well.\nDo you need to make any adjustments to your code? Keep track of those adjustments.\n\n\nSave data and code for these presslogs as: \n\n  - \"presslog-yyyymmdd.csv\" \n  - \"process_presslog_yyyymmdd.R\"\n\n---\n\n# Deliverables (1) or (2)\n\n## Deliverable (1)\n\nCreate a markdown table with a description of the structure of your repository (i.e. which files are where, and what is included).\nThe structure is not going to be graded itself, just your description of the structure. \nYou will find that good structures are easier to describe :)\n\nCombine all of your service call data sets into one, draw a barchart of the number of service calls by day, colour by service log file.\n\n\n## Deliverable (2)\n\nIn case things went horribly wrong, and you could not get things to work, describe what you did, which error you encountered, and what strategies you tried before you gave up/ the time for the lab was up. \n\n---\n\n# Submit\n\n<br>\n\nPush your changes to the repository, make sure that the **README.Rmd file knits** on your machines, push the **README.md** file as well. \n\nMake sure to add all datasets and all code files to the repository.\n\nUpload a link to your repository to Canvas. Only one submission per team is required. \nFinishing touches can be made until Monday, Feb 20, 11:59 pm.\n\n<br>\n<br>\n<br>\nAnd you are done!\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}