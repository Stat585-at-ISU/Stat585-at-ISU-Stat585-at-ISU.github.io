[
  {
    "objectID": "labs/01-slides.html#how-this-is-going-to-work",
    "href": "labs/01-slides.html#how-this-is-going-to-work",
    "title": "Lab 1",
    "section": "How this is going to work",
    "text": "How this is going to work\n\nFind your team\nYou are asked to work through a set of questions\nThe deliverable is a final push to your github repository and (in Canvas) an upload of the link to your repository. Don’t forget that ALL of the team members should contribute to the repo :)"
  },
  {
    "objectID": "labs/01-slides.html#agenda-for-today",
    "href": "labs/01-slides.html#agenda-for-today",
    "title": "Lab 1",
    "section": "Agenda for today",
    "text": "Agenda for today\n\nLink RStudio and git\nDeal with the weather (stations) …\n… and some funny file formats"
  },
  {
    "objectID": "labs/01-slides.html#repo-for-the-lab",
    "href": "labs/01-slides.html#repo-for-the-lab",
    "title": "Lab 1",
    "section": "Repo for the lab",
    "text": "Repo for the lab\n\nAccept the link to the github classroom assignment (sent by email).\nCheck whether one of your team members has already created a team. In that case, join them. If none of your team members is listed yet, create a team.\nLink the repository to RStudio … (see next set of slides)"
  },
  {
    "objectID": "labs/01-slides.html#connecting-rstudio-and-git",
    "href": "labs/01-slides.html#connecting-rstudio-and-git",
    "title": "Lab 1",
    "section": "Connecting RStudio and git",
    "text": "Connecting RStudio and git\nWork through chapter 12 of Jenny Bryan’s book “Happy git with R”\nUse your lab’s repository as the example repository in RStudio.\nAdd a link to the lab repository in your write-up."
  },
  {
    "objectID": "labs/01-slides.html#weather-stations",
    "href": "labs/01-slides.html#weather-stations",
    "title": "Lab 1",
    "section": "Weather stations",
    "text": "Weather stations\n\nThe National Climate Data Center at NOAA publishes information on temperature and precipitation across a network of stations in the US.\nThe Data can be accessed through via https://www.ncei.noaa.gov/pub/data/ushcn/v2.5/, a code book with a description of the data structure is available at https://www.ncei.noaa.gov/pub/data/ushcn/v2.5/readme.txt\n\nDownload a copy of the file ushcn-v2.5-stations.txt.\nMake yourself familar with the command read_fwf from package readr.\nUse the codebook description for the stations file, extract all columns and bring them into the intended format (i.e. numbers are numbers)\nCreate a plot with ggplot2 to show latitude, longitude and elevation. Can you also include state information and time zone?\nDeliverable: include the code necessary to read the file and to create the plot in README.Rmd. Also include the file ushcn-v2.5-stations.txt to your repository."
  },
  {
    "objectID": "labs/01-slides.html#funny-file-formats",
    "href": "labs/01-slides.html#funny-file-formats",
    "title": "Lab 1",
    "section": "Funny file formats",
    "text": "Funny file formats\n\nThe file ushcn.tavg.latest.raw.tar.gz at ftp://ftp.ncdc.noaa.gov/pub/data/ushcn/v2.5 contains data on average temperatures across the US.\n\nDownload the file and get it to open with tools available in R. (Double-clicking is cheating! :) )\nDetermine how many files are contained inside ushcn.tavg.latest.raw.tar.gz and the name of the file containing the temperature data of your home towns or Fort Dodge, IA (please specify).\nDeliverable: In the Rmarkdown file include the code necessary to extract files from the archive ushcn.tavg.latest.raw.tar.gz. Include code to answer the above questions.\n\nIf things don’t work write a paragraph on why things do not work and what you have tried."
  },
  {
    "objectID": "projects/project-requirements.html",
    "href": "projects/project-requirements.html",
    "title": "Stat 585",
    "section": "",
    "text": "For the final project you are asked to create an R package. You are free to choose package functionality, but there should be\n\na minimum of five functions with a coherent theme,\na shiny app show-casing some of the functionality\na website for the package\na README page with installation instructions and basic demonstration of functionality\nevidence of testing the functionality\n8-10 page report detailing your work. This report should be written as a package vignette, included in your package’s documentation.\n\nYou are asked to present your work as a team in one of the speaking slots during dead week and finals week. Each team member is supposed to present for about 5 mins."
  },
  {
    "objectID": "projects/project-samples/2022/Wangqian-Ju-abstract.html",
    "href": "projects/project-samples/2022/Wangqian-Ju-abstract.html",
    "title": "Build modularized shiny app with ggpaintr",
    "section": "",
    "text": "We here introduce an open-source R package ggpaintr, for building a modularized shiny app in the similar grammar of ggplot2. This package provides built-in modules for both ui and server side of a shiny app so that a shiny app with a graphical user interface for ggplot2 can be easily implemented. And users can write and provide their own modules to further extend and customize the package’s functionality. A shiny app called ggpaintr_app is built with the ggpaintr package and included in the package. ggpaintr_app serves as a shiny app for those unfamiliar with the Grammar of Graphics or ggplot2 but want to create a plot using ggplot2. The corresponding ggplot2 R codes will also be provided once a plot has been created. Additionally, another shiny app called ggpaintr_iris_app is included in the package to showcase how to deploy the basic functionality of this package to build other shiny apps or packages."
  },
  {
    "objectID": "projects/project-samples/2022/Zirou-Zhou-abstract.html",
    "href": "projects/project-samples/2022/Zirou-Zhou-abstract.html",
    "title": "An R package to visualize US Census data",
    "section": "",
    "text": "The data of unemployment and household income for the U.S. States is publicly available on USDA. We create an R package and a shiny app to visualize unemployed rate and household income spatially and temporally across United States."
  },
  {
    "objectID": "projects/project-samples/2022/Eshita-Zaman-abstract.html",
    "href": "projects/project-samples/2022/Eshita-Zaman-abstract.html",
    "title": "woRldnews",
    "section": "",
    "text": "We created an R package that enables the user to query a global API for news articles in a Shiny app. Users can search by country, language, category, and date range. A data frame is generated that includes the headline, a description, date of publication, a clickable hyperlink and the image associated with the article where provided for the top 20 headlines."
  },
  {
    "objectID": "projects/project-samples/2022/Saqlain-abstract.html",
    "href": "projects/project-samples/2022/Saqlain-abstract.html",
    "title": "Exploring 1973 U.S Arrests Data",
    "section": "",
    "text": "The goal of the package ‘aliapp’ is to visualize and explore the 1973 US Arrests data using an interactive dashboard made by R and Shiny. The dataset used here is an in-built dataset in base R. The Shiny app has functionalities to visualize crime rates of different arrests statewise with the help of a bar chart as well as a colour-themed map."
  },
  {
    "objectID": "projects/project-samples/2022/Abadi-Ghazal-abstract.html",
    "href": "projects/project-samples/2022/Abadi-Ghazal-abstract.html",
    "title": "Stock market prediction",
    "section": "",
    "text": "Stock market is the aggregation of buyers and sellers of stocks, which represent ownership claims on businesses. This might include securities listed on a public stock exchange, as well as stock that is only traded privately, such as shares of private companies. Stock market prediction has always been of great importance. However, predicting has always been challenging. This package helps in predicting stock price movement using sentiment analysis and web scrapping. Team-9 package"
  },
  {
    "objectID": "projects/project-samples/2022/Bufei-Guo-abstract.html",
    "href": "projects/project-samples/2022/Bufei-Guo-abstract.html",
    "title": "BayesAPLM - Bayesian Variable Selection for additive partial linear model",
    "section": "",
    "text": "BayesAPLM provides a variable selection tool in the spirit of the stochastic shotgun search algorithm. By embedding a unique model based screening and using fast Cholesky updates, BayesAPLM produces a highly scalable algorithm to explore gigantic model spaces and rapidly identify the regions of high posterior probabilities. It outputs the log (unnormalized) posterior probability of a set of best (highest probability) models."
  },
  {
    "objectID": "projects/project-samples/2022/Danyang-Zhang-abstract.html",
    "href": "projects/project-samples/2022/Danyang-Zhang-abstract.html",
    "title": "What People Talk About When they Talk About Professors",
    "section": "",
    "text": "We aim to analyze information of professors on ratemyprofessors.com. We extracted information such as ratings, comments, tags, etc. from the website. We also did a sentiment analysis on comments and visualized different types of word to give a direct impression in a shiny app."
  },
  {
    "objectID": "projects/project-samples/2022/Kieran-Liming-abstract.html",
    "href": "projects/project-samples/2022/Kieran-Liming-abstract.html",
    "title": "pitcheR",
    "section": "",
    "text": "pitcheR is a package designed to take Statcast data (detailed pitch by pitch data from MLB games) and easily visualize it in graphics that are interpretable and useful for anyone looking into big league pitchers. The package can also find trends over time, either game to game or over certain dates, for a pitchers descriptive statistics which helps us look deeper into how the pitcher is throwing the ball."
  },
  {
    "objectID": "projects/project-samples/2022/Lin-Quan-abstract.html",
    "href": "projects/project-samples/2022/Lin-Quan-abstract.html",
    "title": "An R package to visualize U.S. Census Data",
    "section": "",
    "text": "The data of unemployment and household income for the U.S. States is publicly available on USDA. We create an R package and a shiny app to visualize unemployed rate and household income spatially and temporally across United States."
  },
  {
    "objectID": "projects/project-samples/2022/Yunhui-Qi-abstract.html",
    "href": "projects/project-samples/2022/Yunhui-Qi-abstract.html",
    "title": "Post Selection Inference of Estimation from Penalized Matrix Decomposition",
    "section": "",
    "text": "Penalized matrix decomposition (PMD) has been used as a multivariate analysis tool in many disciplines such as precision medicine, integrative omics data analysis. However, since it is an estimation tool, its accuracy ic not guaranteed. We developed a set of tests so that we can do the post selection inference on the estimation from PMD. In this package TestPMD, we focus on sparse canonical correlation analysis using PMD. This package provides functions for estimation, test of canonical correlations, test of the canonical loadings, visualization using scatter plot, bar plot and fisher exact test for group enrichment analysis. Users can therefore decide the dimension used for downstream analysis, which feature truly contributes to the canonical component and how these results relate to the covariates. For some statisticians, it is not easy to gain biological insights from the identified features due to the complex name of molecules. So, we provide a search tool which can be used to pull the top 5 papers from PubMed by searching the feature names. A shiny app is created to facilitate the use of TestPMD."
  },
  {
    "objectID": "projects/project-samples/2019/Earl-Hur-abstract.html",
    "href": "projects/project-samples/2019/Earl-Hur-abstract.html",
    "title": "PetFindr - Find pets near me!",
    "section": "",
    "text": "Adopting a pet from an animal shelter is a great idea, but is a stressful process. Our R package petfindr will allow users to make pet searching an easier process.\nOur package is an R client for the Petfinder API which collects pet data from petfinder.com. We have written functions to allow R users to access the Petfinder API and provide useful tools to users to find their new furry friends that fit the user’s preferences (e.g., dogs or cats, breeds, age, gender, etc.) from the user’s accessible location. We have also built a Shiny application for visualization, such as creating an interactive map of animal shelters (to show where the pets are located) with pictures of the pets and descriptions of the pets (with pop-up text)."
  },
  {
    "objectID": "projects/project-samples/2019/Qing-He-abstract.html",
    "href": "projects/project-samples/2019/Qing-He-abstract.html",
    "title": "Dealing with the current weather data",
    "section": "",
    "text": "It is important to get current weather data of the airports in time. Our package collects the information of the current weather (XML) data from the website of NOAA’s National Weather Service and show it on appropriate plots. Our Shiny app shows the plots with the chosen weather elements and the chosen airports by the user."
  },
  {
    "objectID": "projects/project-samples/2019/Zahra-Khoshmanesh-abstract.html",
    "href": "projects/project-samples/2019/Zahra-Khoshmanesh-abstract.html",
    "title": "SentiAnalyzer - Sentiment analysis for consumer review",
    "section": "",
    "text": "Consumer reviews are very instrumental in projecting the development and direction of businesses. The wealth of information provided with online reviews can be analyzed to access the general sentiment of the consumer towards the product/service. This sentiment analysis will provide general idea and quantitative measure of the consumer’s sentiment.\nThe required data set, in .tsv format, consist of a text review and a binary input of 0 or 1 indicating whether the consumer liked the item or not. These will be balanced using “ROSE” package, which attempts to generate synthetic data by randomly over-sampling examples in case of imbalance data.\nThen using a text mining package “tm”, it will mine for the words/word base of interest such as keywords that conveys sentiment based on dictionary list provided by the package. This “stream-lined” tokens that were independent variables on the raw dataset is then joined in a matrix through either of the three algorithms of the user’s choice such as Bag of Words, Tfdfi, or Bigram and will be analyzed based on its sentiment. Next, using “caTools” package, we split the data set to 0.2 data and 0.8 training set split ratio to be fed to different classification models of provided by the existing machine learning algorithms training models.\nThe package also compares the accuracy of the prediction model based on the machine learning algorithm which the user can choose from: decision tree, naïve bayes, or random forest. The result is different parameters of the sentiment prediction that is built in a confusion matrix: Accuracy, Precision, Recall, and F1 score. Lastly, these parameters will be visualized as a wordcloud as well as presented in an interactive Shiny app. Overall, this package will put together different algorithms and visualization of a version of natural language processing (NLP) and will allow a broader audience of user to access this tool."
  },
  {
    "objectID": "projects/project-samples/2019/Dapeng-Hu-abstract.html",
    "href": "projects/project-samples/2019/Dapeng-Hu-abstract.html",
    "title": "Find Your Flight with R",
    "section": "",
    "text": "Finding the cheapest flight from point A to point B can be a headache for most of us, especially with other multiple constraints, such as duration, departure and arrival time, layover, etc. The flight searching engines do not provide detailed enough filters for those “picky” customers, and it’s also time consuming to constantly check the flight information. Our project (R package) allows us to scrape information from Skyscanner API, and keep track of that per unit time. The functions in our package also enable us to filter and sort the available flights based on customized constraints. Outcomes are presented with both text and user-friendly figures. Finally, we build a Shiny web page to make flight searching process easy and fun."
  },
  {
    "objectID": "projects/project-samples/2019/Zhenzhen-Chen-abstract.html",
    "href": "projects/project-samples/2019/Zhenzhen-Chen-abstract.html",
    "title": "The ggfun package",
    "section": "",
    "text": "The ggfun package wants to expand some of the existing ggplot2 functionalities by wrapping up some new layer functions and existing methods.\nThe current functionalities including creating arrow map for US election, adding new objects in the existing layers, achieving some complicated data transformation and visualization etc."
  },
  {
    "objectID": "projects/project-samples/2019/Xiyuan-Sun-abstract.html",
    "href": "projects/project-samples/2019/Xiyuan-Sun-abstract.html",
    "title": "Real Estate Marketing Analysis",
    "section": "",
    "text": "We wrote an R package ‘realEstAnalytics’, which provides an R function for each Zillow API service, making it easy to make API calls and process the response into convenient, R-friendly data structures.\nWe will also build a Shiny app, which allows users to choose parameters they care about, then score and rank US counties to buy a house. We would set parameter bars such as Air Quality, Income, Living Cost, Income/Cost ratio, crime rate, the population in our shiny app. We would need multiple data sources for this purpose."
  },
  {
    "objectID": "projects/project-samples/2019/Katherine-Goode-abstract.html",
    "href": "projects/project-samples/2019/Katherine-Goode-abstract.html",
    "title": "redres - Redress Your Mixed Model Assumptions",
    "section": "",
    "text": "We have created a package that takes random effect, or mixed, models fitted using lmer from the lme4 package and returns residual diagnostics. There are functions for calculating the marginal standardized residuals, conditional residuals, and generalized residuals. The user can look at residual plots for these residuals or any of the residuals also provided by lme4. In the Shiny app, the user can interact with the residual plots to identify outliers or other problematic observations and potential exploratory variables."
  },
  {
    "objectID": "projects/project-samples/2019/Joe-Zemmels-abstract.html",
    "href": "projects/project-samples/2019/Joe-Zemmels-abstract.html",
    "title": "statfoRdummies",
    "section": "",
    "text": "Intro stats classes can be rough for some people, even more so for others. As instructors and TA’s for intro statistics classes we see what students struggle with the most. In order to help our students, we have taken 4 often confusing topic and visualized them, hoping that with use of these visualizations these topics become a little less confusing. Let’s hope that our students think so too."
  },
  {
    "objectID": "projects/project-samples/2019/Brianna-Lawton-abstract.html",
    "href": "projects/project-samples/2019/Brianna-Lawton-abstract.html",
    "title": "CyChecks - Examining Pay Patterns Across Iowa State University",
    "section": "",
    "text": "Salary data for Iowa State University employees is publicly available through the state government. We’ve developed Cychecks, an R package, for the purpose of examining and interpreting this dataset. This package will allow users to compare pay between genders, positions, and departments, for instance, and display the results in a dynamic interface. While this data is publicly available, we also understand that salaries are sensitive, personal information and therefore we will be anonymizing all names. We hope Cychecks will provide useful fodder for discussing pay patterns within a publicly funded university."
  },
  {
    "objectID": "projects/project-samples/2022.html",
    "href": "projects/project-samples/2022.html",
    "title": "2022 Project Abstracts",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nExploring 1973 U.S Arrests Data\n\n\nAli Sk Saqlain\n\n\n\n\nBayesAPLM - Bayesian Variable Selection for additive partial linear model\n\n\nBufei Guo\n\n\n\n\nWhat People Talk About When they Talk About Professors\n\n\nDanyang Zhang, Yuhang Lin, Mohammad Fili\n\n\n\n\nwoRldnews\n\n\nEshita Zaman, Coskun Erden, Alex Cleveringa\n\n\n\n\nStock market prediction\n\n\nGhazal Shah Abadi, Parastoo Akbari,\n\n\n\n\npitcheR\n\n\nKieran Liming, Robert Castaneda, Gabrielle Collins, Abigail Collins, Abraham Adokwei\n\n\n\n\nAn R package to visualize U.S. Census Data\n\n\nLin Quan, Zirou Zhou, Xiaolan Wan\n\n\n\n\nBuild modularized shiny app with ggpaintr\n\n\nWangqian Ju, Zhili Qiao, Jinji Pang\n\n\n\n\nPost Selection Inference of Estimation from Penalized Matrix Decomposition\n\n\nYunhui Qi\n\n\n\n\nAn R package to visualize US Census data\n\n\nZirou Zhou, Lin Quan, Xiaolan Wan\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/project-samples/2019.html",
    "href": "projects/project-samples/2019.html",
    "title": "2019 Project Abstracts",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nCyChecks - Examining Pay Patterns Across Iowa State University\n\n\nBrianna Lawton, Virginia Nichols, Lydia English, Yones Khaledian, Stephanie Reinders\n\n\n\n\nFind Your Flight with R\n\n\nDapeng Hu, Yang Qiao, Min Zhang, Xin Zhang, Zerui Zhang\n\n\n\n\nPetFindr - Find pets near me!\n\n\nEarl Hur, Jessica Kueon, Hana Lee, Amin Shirazi, Miranda Tilton\n\n\n\n\nstatfoRdummies\n\n\nJoe Zemmels, Charlotte Roiger, Eryn Blagg, Gulzina Kuttubekova\n\n\n\n\nredres - Redress Your Mixed Model Assumptions\n\n\nKatherine Goode, Yonghui Huo, Jing Zhao, Kellie McClernon, Yudi Zhang\n\n\n\n\nDealing with the current weather data\n\n\nQing He, Jing Hou, Jing Li, Yuchen Wang, Ying Zheng\n\n\n\n\nReal Estate Marketing Analysis\n\n\nXiyuan Sun, Steven Harms, Oscar Aguilar, Gani Agadilov\n\n\n\n\nSentiAnalyzer - Sentiment analysis for consumer review\n\n\nZahra Khoshmanesh, Atousa Zarindast, Joshua Budi\n\n\n\n\nThe ggfun package\n\n\nZhenzhen Chen, Yawei Ge, Weiquan Luo\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/project-rubric.html",
    "href": "projects/project-rubric.html",
    "title": "Project Rubric",
    "section": "",
    "text": "For the final project you are asked to create an R package. You are free to choose package functionality, but there should be\n\na minimum of five functions with a coherent theme,\na shiny app show-casing some of the functionality\na website for the package\na README page with installation instructions and basic demonstration of functionality\nevidence of testing the functionality\n8-10 page report detailing your work. This report should be written as a package vignette, included in your package’s documentation.\n\nYou are asked to present your work as a team in one of the speaking slots during dead week and finals week. Each team member is supposed to present for about 5 mins."
  },
  {
    "objectID": "projects/project-rubric.html#grading-rubric",
    "href": "projects/project-rubric.html#grading-rubric",
    "title": "Project Rubric",
    "section": "Grading Rubric:",
    "text": "Grading Rubric:\n\nPackage (40 points)\n\n\n\n\n\n\n\n\n\n\n\nCriteria\nPoints\nOutstanding (> 90%)\nGood (70-90%)\nNeeds work (50-70%)\nNeeds a lot of work (< 50%)\n\n\n\n\nPackage Topic\n10\nPackage is useful and coherent, addressing a well-defined problem.\nPackage is useful, but may have some implementation gaps or lack a coherent solution to the main problem the package addresses\nPackage is incoherent, including functions not aimed at addressing the stated issue\nPackage does not address a single problem or consists of seemingly random functions\n\n\nBuilds and Installs\n5\nPackage builds and installs correctly.\nPackage builds and installs correctly with only minor modifications.\nPackage builds and installs correctly with major modifications.\nPackage does not build and install correctly during the grading process.\n\n\nDocumentation\n5\nEach exported function is well documented, with examples detailing its use. Package uses pkgdown to present documentation to the reader.\nMost functions are well documented, but gaps in examples or full documentation exist. Documentation on pkgdown exists, but may have some deficiencies or be slightly out of date.\nSome functions are documented, but large gaps in documentation and examples exist, making it difficult to understand how to use the package functions. Package documentation may exist, but pkgdown is not used to make the documentation easily available on the web.\nThe package is poorly documented, or existing documentation is not easy to read and understand. No attempt to use pkgdown to make documentation available online.\n\n\nTesting\n5\nPackage has over 90% test coverage with meaningful tests. Functions are structured to do only one thing to make testing efficient. Package integrated with TravisCI and Codecov.io, and test coverage and status are reported in the package README.\nPackage has over 80% test coverage. Tests cover some important functionality but unnecessary tests exist and/or tests miss important areas of coverage. Functions may not be written to perform only one task. Travis integration and Codecov.io integration are set up but may not be working consistently.\nPackage has less than 80% test coverage with meaningful tests. Functions are not well structured for testing. Travis CI or Codecov.io integration is not working.\nPackage has minimal or no useful testing. No attempt to make use of Travis CI or Codecov.io to show package testing status.\n\n\nPackage Data\n5\nPackage includes some data which is useful for demonstrating the package functions. Data is well documented and used in the examples and the package vignette.\nPackage includes data used to demonstrate the package, but documentation is lacking and/or the data is not integrated into examples and the package vignette. Package may include some data which is not properly documented or necessary to the package’s functions\nPackage includes data but it is not well documented. Examples and vignettes may use data which is not included in the package and is also not explained or documented well.\nPackage does not include data or includes data with no documentation or explanation\n\n\nSpelling\n5\nPackage and documentation is spell-checked\nSome spelling errors are present but writing is mostly coherent\nPackage documentation and function comments have noticable lapses in spelling and/or grammar.\nPackage documentation is poorly spell-checked, has incomprehensible grammar, or is non-existent\n\n\nDependencies/Imports\n3\nPackage has dependencies and imports that make sense\nPackage has a few extra imported packages, or packages which are listed as dependencies that could be imported instead\nPackage is missing imports or dependencies\nNo attempt has been made to list imports and dependencies in a coherent fashion\n\n\nExported functions\n2\nOnly functions which are intended to be shown to the user are exported; all exported functions have examples and supporting documentation\nSome attention has been given to only exporting functions intended for user use, but there are some issues with the implementation\nAll functions are exported, or functions that are intended for user use have not been exported\nNo attention has been paid to which functions should be imported or exported\n\n\n\n\n\nShiny App (30 Points)\n\n\n\n\n\n\n\n\n\n\n\nCriteria\nPoints\nOutstanding (> 90%)\nGood (70-90%)\nNeeds work (50-70%)\nNeeds a lot of work (< 50%)\n\n\n\n\nInstallation\n10\nInstallation instructions are complete, shinyApp loads and runs without problems\nminor things have to be taken care of before the app runs or installation instructions are missing crucial information\nminor things have to be taken care of before the app runs and installation instructions are missing crucial information\nmajor steps need to be taken to ensure that the app runs, installation instructions are missing or not helpful\n\n\nFunctionality\n10\nThe shiny app provides access to an important piece of the package and works smoothly.\nThe app demonstrates a minor aspect of the package. The app stops working intermittently.\n\n\n\n\nComplexity\n10\nMultiple interactive UI elements are implemented\n\n\nThe app is quite simplistic.\n\n\n\n\n\nVignette (30 Points)\n\n\n\n\n\n\n\n\n\n\n\nCriteria\nPoints\nOutstanding (> 90%)\nGood (70-90%)\nNeeds work (50-70%)\nNeeds a lot of work (< 50%)\n\n\n\n\nUses pkgdown and github /docs\n8\nReport is formatted as a vignette using pkgdown and integrated into the github repository using the /docs folder.\nReport can be generated reproducibly and is located in the /docs folder, but does not use pkgdown or is not connected to the package’s github.io site\nReport is not reproducible or not located in the correct location\nReport consists of loosely connected pieces\n\n\nContent\n7\nReport describes the use of the package and package functions, unifying the separate functions included in the package to solve a single problem or task. Each major function is included in the vignette, with substantial additional text explaining the use of the function to solve a real-world problem.\nReport describes the use of the package and package functions, but does not present the package as a unified entity aimed at a specific single task. Some descriptions are sparse; the vignette may leave the reader with additional questions that are not completely answered. Code examples may only cover specific use cases instead of a more general approach\nVignette does not include all major functions, examples do not demonstrate major package functionality, and additional textual descriptions may be sparse or absent in places.\nVignette does not demonstrate major package functionality, and only includes minimal text description of the package’s capabilities.\n\n\nGraphs and Tables\n10\nGraphs and tables included in the package vignette are designed for a specific purpose and are carefully constructed to communicate with the reader. Each graph or table illustrates one point or package feature. Formatting and styling show that some optimization and care went into the creation of the table or graph\nGraphs and tables are well constructed but may have minor flaws or poor labeling decisions.\nMany graphs or tables have minor problems, or may be poorly chosen or redundant.\nGraphs and tables do not support questions and findings. Major problems with presentation - graphs may be missing or fail to generate.\n\n\nText\n5\nEnglish is polished, concise, and clear. No grammar or spelling mistakes\nClear and concise, but not elegant. Some spelling/grammar errors\nReadable, but unnecessarily verbose or lacking in detail. Many errors that compromise readability.\nBarely readable, with many spelling and grammar errors. No evidence of any proof-reading."
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "This class requires a presentation and a report for a final project. Final projects are team-based with teams consisting of 3 to 5 members.\nFor the final project you are asked to create an R package. You are free to choose package functionality, but there should be\n\na minimum of five functions with a coherent theme,\na shiny app show-casing some of the functionality\na website for the package\na README page with installation instructions and basic demonstration of functionality\nevidence of testing the functionality\n8-10 page report detailing your work. This report should be written as a package vignette, included in your package’s documentation.\n\nYou are asked to present your work as a team in one of the speaking slots during dead week and finals week. Each team member is supposed to present for about 5 mins.\nYou can have a look at the scope of some projects from 2019 and 2022\nThere are several stages to the project. Only the last two stages are graded. All other stages are not graded. You should use them as an opportunity to get feedback. For stages 1-3 feedback will be given as soon as you submit your contribution, i.e. you don’t have to wait until after Spring break to submit your project idea.\n\nStage 1 (by Mar 10, not graded): Identify team and topic\nStage 2 (by Apr 14, not graded): Functional Package\nStage 3 (by Apr 28, not graded): Testing and Documentation\n\nAbstract and Presentation slots\n\nStage 4: Presentation (Dead week and Finals, graded)\nStage 5 (May 9th, graded): Package submission to canvas (Finals week)\n\nWe will be using the following project rubric for evaluating the final submission. Presentations are peer-evaluated. Feedback will be given in this form."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Technologies for Statistical Analysis",
    "section": "",
    "text": "TR 2:10 - 3:25 pm, Lagomarcino 1445, see zoom link in Canvas\nOffice Hours: by appointment\nInstructor: Heike Hofmann, hofmann at iastate dot edu\nTA: Ganesh Krishnan, ganeshk at iastate dot edu\n\n\n\nSupposedly. Source"
  },
  {
    "objectID": "index.html#course-description",
    "href": "index.html#course-description",
    "title": "Data Technologies for Statistical Analysis",
    "section": "Course description:",
    "text": "Course description:\nNot all data lives in nice, clean spreadsheets, not all data fits in a computer’s main memory. As statisticians we cannot always rely on other people and sciences to get the data into formats that we can deal with: we will discuss aspects of statistical computing as they are relevant for data analysis. Read and work with data in different formats: flat files, databases, web technologies. Elements of literate programming help us with making our workflow transparent and analyses reproducible. We will discuss communication of results in form of R packages and interactive web applications."
  },
  {
    "objectID": "index.html#learn-how-to",
    "href": "index.html#learn-how-to",
    "title": "Data Technologies for Statistical Analysis",
    "section": "Learn how to…",
    "text": "Learn how to…\n\nread and combine data from flat files, SQL database, binary netCDF, and making use of web technologies as data source.\ncompute with data.\nclean the data, check the quality, impute missing values.\nwrite efficient and reproducible code so others are able to replicate the analysis.\ndevelop software, individually and collaboratively, debug, profile and package R code.\nexperiment with event driven programming to build an interactive graphic, and a GUI.\npull data together to solve a contemporary problem."
  },
  {
    "objectID": "index.html#more-info",
    "href": "index.html#more-info",
    "title": "Data Technologies for Statistical Analysis",
    "section": "More info…",
    "text": "More info…\nUse the navigation bar above!\nThe course organization on GitHub: https://github.com/stat585-at-ISU\nRepo that creates this website: https://github.com/Stat585-at-ISU/Stat585-at-ISU.github.io"
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/xyzyc/ZhouYingchao.html",
    "href": "blog-2023/Blog-1-submissions/xyzyc/ZhouYingchao.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer).\n\nI answered one question from stackoverflow about plotting data with longitude and latitude on a map. Here is the link: https://stackoverflow.com/questions/75228497/how-can-i-plot-a-map-using-ggplot2-that-includes-the-latitude-and-longitude-of-t/75229784#75229784\n\nRelate your experience of answering the question to your reading. \n\nome questions I see on stackoverflow are long and messy, with many code chunks and I feel hard to read and understand them. Although the titles seem not too difficult, after clicking in, I gave up reading them. Giving a minimal reproducible example can really make it much easier for answerers.\n\nInstructions to follow."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/kundan7kumar/KumarKundan.html",
    "href": "blog-2023/Blog-1-submissions/kundan7kumar/KumarKundan.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Pick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\nI have asked a question about how to detect objects in a video using python. Please find the Link\nMoreover, I have answered on question in R, in which i plotted a pie chart.Please find the Link\n\nDocument which question you answered (link to your answer).\n\nI have answered a question how to create Pie chart legend with multiple lines of text in R. User is facing an issue that multiple lines of text will out of legend. Please find the Link\nI have explored the the package ‘ggplot2’ and ‘ggrepel’ and finally plotted the pie chart in which multiple lines of text are within the legend.\n\nRelate your experience of answering the question to your reading. \n\nAs the start, i was just plotting it seems fine to me, but seems i didn’t understand the problem well. I was only using the basic R functionality for plotting the pie chart and i literally struggle alot.\nAfter understanding the problem well, i explored the R packages and implemented the code successfully and plotted the pie chart along the legend precisely. It is a great learning curve for me and hopefully enhanced my skill a bit."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/anyeshar/RayAnyesha.html",
    "href": "blog-2023/Blog-1-submissions/anyeshar/RayAnyesha.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer). https://stackoverflow.com/questions/75204993/merge-two-csv-files-based-on-row-information/75205639#75205639\nRelate your experience of answering the question to your reading. \n\nBased on my reading there are a couple things that we should do when asking a question: - Make sure your question is on-topic and suitable for this site - Search, and research - Write a title that summarizes the specific problem - Introduce the problem before you post any code - Help others reproduce the problem - Include all relevant tags - Proofread before posting - Respond to feedback after posting -(From https://stackoverflow.com/help/how-to-ask)\nThe question I answered would not be considered a good question. While the question was on topic and had an appropriate title, it was not researched and not reproducible. The question was about merging two csv files, and I am sure that question has already been asked before. Also, they gave a description of the data, but it was not very detailed. I answered the question based on what I assumed the data looked like, but the question could have been more descriptive. From looking around on Stack Exchange, it is more difficult than you think to ask a good question.\n\nInstructions to follow."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/Landon-Getting/GettingLandon.html",
    "href": "blog-2023/Blog-1-submissions/Landon-Getting/GettingLandon.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer).\nRelate your experience of answering the question to your reading.\n\n\nInstructions to follow."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/Landon-Getting/GettingLandon.html#blog-post---landon-getting",
    "href": "blog-2023/Blog-1-submissions/Landon-Getting/GettingLandon.html#blog-post---landon-getting",
    "title": "Asking Good Questions",
    "section": "Blog Post - Landon Getting",
    "text": "Blog Post - Landon Getting\nWhile trying to identify a question to answer, I was surprised at the rate of response to most of the posted questions on StackOverflow. Many of the trivial, popular, or generic questions were answered in around 20 minutes. By the time I was done crafting my response, there had already been an accepted answer. However, I went back a few days and found an interesting unanswered question. I answered “How to plot the effects of various explanatory variables on the response variable” on StackOverflow.\nPlotting data in many dimensions can be a difficult task and it made sense why this question was unanswered. In my limited experience, there is not a widely accepted and general method for this type of visual. I did some ‘search and research’ as suggested in “How do I ask a good question?” and came up wanting more - as the author of the question likely did. I think the author could have been more precise with their title. Something along the lines of “Plotting Effect of Predictors in MLR on Response Variable?” However, the post was overall short and to the point. I also would have liked to see some data provided to help generate examples. I created a quick shiny app to show how an interactive solution may be useful in addition to a simple column graph for relative comparison of the effects."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/mattkav49/KavanaughMatt.html",
    "href": "blog-2023/Blog-1-submissions/mattkav49/KavanaughMatt.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer).\n\nI answered the following question on StackOverflow: https://stackoverflow.com/questions/75239069/error-matrix-must-have-equal-dimensions-despite-seemingly-equal-dimensions/75239932#75239932\n\nRelate your experience of answering the question to your reading. \n\nWhen answering this question, I took advantage of what the asker did provide in terms of a of a minimal, reproducible example. The asker provided a sufficient amount of code that was necessary to answer the question. This code was also very well organized and grouped into small chunks. The included code was also relevant to the issue at hand, and extraneous details were omitted. As a result, I was able to test out similar code myself with a sample program to determine whether my solution was plausible. Additionally, I was able to compare my solution with related questions and answers presented by other StackOverflow users. However, the asker did not provide the specific R package they used to fit their model. Hence, I was unable to know for sure whether the issue was related to the data in their test matrix or if it was instead an issue with the way they were using a certain package. The question only included small amounts of code and a brief description of the issue. Additionally, no comments were included for the code that was included, which made it difficult to understand all lines of code with this package that I was seemingly unfamiliar with. Fortunately, the problem appeared to be quite self-explanatory and required few additional details. When answering the question, I asked for additional clarification on the R package that they used so that myself or another user can provide a more detailed solution (if my solution does not solve their issue). The problem should then be easily solved by another user who has a greater degree of familiarity with the associated package.\n\nInstructions to follow."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/charlestbonk/BonkCharlie.html",
    "href": "blog-2023/Blog-1-submissions/charlestbonk/BonkCharlie.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\n\nOkay, so I looked at all of the R questions and even with my relatively decent knowledge of R, I have no idea the back end of things and I thought I could maybe answer a question on R on MacOS since I have dealed with a lot of issues, but I got super anxious and scared about answering any of the questions, so I just went to a LaTeX question (which is still kind of R adjacent becuase maybe they are working in a .qmd file?) and answered it.\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer).\n\n\nLink to my answer\n\n\nRelate your experience of answering the question to your reading. \n\n\nOne thing about the question that I answered is that the answer to it is really easy to find online. Like, I’m not sure if the user looked elsewhere before asking on StackOverflow. Simply Googling “How to remove the numbering before a section in LaTeX” pulls up an Overleaf site with the answer. So if I were that person, I would have first looked elsewhere.\nThe question asker also could have done a little better with include all relevant code in order to answer their solution. They included just the part that was giving them trouble, when a document class and some of the packages being used would have been helpful. I assumed they were working on an article as it is the most common, but the answer should apply across all classes.\nIf I could talk to them face-to-face, I would have pointed them to other sources (i.e. Overleaf) for most of their questions, since their documentation is really good for quick-access LaTeX questions. If they were also working in somehting like R with a Quarto document, I know Quarto’s website also has a plethora of knowledge.\nOne thing the readings did not tell you is that answering on StackOverflow is SO SCARY like I haven’t been as stressed out about anything before. Like, what is too little to add? Is saying that `{python} ` (without the space) is another way to quickly access Python in a .Rmd document, when someone already spoke about the code you can run in a R session with the ‘reticulate’ package? Also I was and still am afraid that I made a mistake with my answer and it is wrong or not what they needed and then my answer will get down-voted to the deepest depths.\nI’m just too timid to ask questions on StackOverflow, but also too timid to answer them.\n\n\nInstructions to follow."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/TWiedRW/WiederichTyler.html",
    "href": "blog-2023/Blog-1-submissions/TWiedRW/WiederichTyler.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer).\n\nhttps://stackoverflow.com/questions/75197974/got-stuck-while-changing-data-format-from-wide-to-long/75242594#75242594\n\nRelate your experience of answering the question to your reading. \n\nThe problem I submitted an answer for ended up being a lot easier than what everybody else was thinking. In this case, the author needed to get data from a wide format into a long format. The author provided code for the process, but did not include code for a sample dataset. This did not allow me to fully test to see if my solution worked, but the problem was within the syntax. The author was inputting a list of countries to melt with reshape2 and was missing a couple of commas. The error could be reproduced with c(\"Var1\" \"Var2). I also provided a recommendation to use the pivot_longer() function to simplify the amount of typing (and potential typing errors).\n\nMinimal: the code provide was quite basic, but included all columns necessary for their particular problem. However, this was actually needed in this case to solve their problem.\nComplete: author did not provide the dataset, so I could not reproduce the problem directly\nReproducible: a similar syntax error gave the same result on my computer, so the problem was reproducible with my suspicion of the problem.\n\n\nInstructions to follow."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/charchit/ShuklaCharchit.html",
    "href": "blog-2023/Blog-1-submissions/charchit/ShuklaCharchit.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\nHow to install rstudio with conda\nConvert NumPy array to Python list\n\nDocument which question you answered (link to your answer).\n\nhttps://stackoverflow.com/questions/75228559/how-to-install-rstudio-with-conda/75254070#75254070\nhttps://stackoverflow.com/questions/1966207/convert-numpy-array-to-python-list/75254352#75254352\n\nRelate your experience of answering the question to your reading. \n\nI picked the newest questions people were asking on the stackoverflow to check my knowledge and try to answer them. A lot of the people were following the rules as described in the reading. However, there were some which were not following and posting the minimal reproducible example or researching the questions if they were already answered.\nI learned another thing during this assignment. I created the account recently and I was not allowed to comment if I do not have more than 50 reputation on the stackoverflow. Which seems like a good system for preventing the new fake/spam accounts. Stackoverflow seems like a helpful community to ask questions. There were other highly active questions which I was not allowed to answer due to similar reason as having a low reputation.\nThe second question I answered was on python as we discussed in the class. Python community seems way larger than the R community and more developed. However, the questions seemed more organized and following the guidelines of the stackoverflow to ask a good question.\n\nInstructions to follow."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/kellynay/NascimentoThompson_Kelly.html",
    "href": "blog-2023/Blog-1-submissions/kellynay/NascimentoThompson_Kelly.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer).\n\nQuestion: Cannot plot a histogram from a Pandas data frame\nAnswer: First, you need to import the Histogram class from the Matplotlib library.\nimport matplotlib.pyplot as plt\nThen, you can use the plot() method which will accept a dataframe column as an argument.\nplt.hist(df[‘column’], color=‘blue’, edgecolor=‘black’, bins=int(45/1))\nSource: https://vitalflux.com/histogram-plots-using-matplotlib-pandas-python/\nLink: (https://stackoverflow.com/a/75250948/21082634)\n\nRelate your experience of answering the question to your reading. \n\nThe reading “Asking Good Questions” from the stack overflow platform outlined the importance of summarizing the problem in the title, writing some introductory text before posting code, and helping others reproduce the problem by posting reprex, mcve, and mwe codes.\nThe question I answered to on stack overflow had a good title “Cannot plot a histogram from a Pandas data frame”, but the user did not provide example code to reproduce the problem. He provided some ways he tried to solve the problem with methods applied, but I can not tell if he imported the correct packages to run the code or what the output would of his problem will look like due to the lack of example code.\nHis question seemed easy to find an answer online, thus, some “Search and Research”could have easily solved his problem. I found an article discussing his problem and linked it in my answer."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/drbradford12/BradfordDenise.html",
    "href": "blog-2023/Blog-1-submissions/drbradford12/BradfordDenise.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "R Help Community Question\nThe actual question from R Help Community: Make dynamic inputs related to each other?\nIm trying to make an application, and one functionality I would like is to have inputs that dynamically update each other!\nto explain this a bit further, I would like to have a functionality where you can have a raw value, a percentile, and a letter grade, and that all 3 show up on the original page of inputs!\nso when you put in the input for the raw value, it will show the letter grade and the percentile on that same page dynamically, and when you put in the percentile it will update the raw value and letter grade on that page\nideally I could do this with the grade as well (so an A will correspond to a 93rd percentile value, an A- to a 90th percentile value, and putting that in, in a dropdown sense, would update the Raw value and letter grade on the same page to those corresponding values)\njust wondering how I could go about this?!\nMy answer My response could be much clearer if I made an example for every possible outcome of using the UI Dynamically but the previous response linked to the Mastering Shiny R book, chapter 10. As chapter 10 may have been the starting place, suggesting Chapter 15 was at an attempt to allow the user to understand more about the UI being reactive when changed. Or in the event that the UI is not what they were actually looking for in their response to their question.\nPros: - The person asked a question that was important and specific to Shiny. - The person knows enough to be detailed in the outcome\nCons: - The person who posted the question failed to ask a question that was specific with an example. As a result, it would be hard to make the best recommendation. - We don’t know what the data look like"
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/HarunCelikOtto/HarunCelik.html",
    "href": "blog-2023/Blog-1-submissions/HarunCelikOtto/HarunCelik.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer).\nRelate your experience of answering the question to your reading. \n\n\nInstructions to follow.\nHarun’s Blog\nI chose to answer a question from StackOverflow because I have used the forum as a resource plenty of times in the past but never contributed. The question I answered was this one about using a list of variables in a loop in R. My username is HarunCelikOtto and is chronologically the second answer to the question.\nI think that after reading the advice by Stack Overflow’s “How do I ask a good question?” I came to better understand why I had trouble understanding the question that the user posted on the forum. While the inquirer added some example code about what data they were working with, they didn’t elaborate on the outcome that was expected of the corrected code. For this reason, another user and myself had to assume what the intended output had to be. While the user may find my answer helpful, maybe it isn’t exactly the result that they want because the objective was unclear. Looking through questions, I’ve come to the realization after this activity that only a good question can elicit a good response."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/HaomingWang123/WangHaoming.html",
    "href": "blog-2023/Blog-1-submissions/HaomingWang123/WangHaoming.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer).\n\n\nI chose a question from stackoverflow, and it asked how to plot two graphs in one plot.\nThe link to this page on stackoverflow is [https://stackoverflow.com/questions/2564258/plot-two-graphs-in-same-plot-in-r]\nWhen I saw this question, the first solution that comes into my mind is to use ggplot2 package to draw the plot because we can add as many layers as we want on the original plot using all geom_ functions.\nHere is an example:\n\n\nlibrary(ggplot2)\n# create an arbitrary integer array x\nx <- c(-3, -2, -1, 0, 1, 2, 3)\n# create two arbitrary functions y1 and y2\ny1 <- 2*x + 2\ny2 <- sin(x)\n# form a data frame used for ggplot\nmy.df <- data.frame(x)\nggplot(data = my.df, mapping = aes(x, y1, y2)) +\n  geom_line(aes(y=y1), colour = \"blue\") +\n  geom_line(aes(y=y2), colour = \"red\")\n\n\n\n\n\nRelate your experience of answering the question to your reading. \n\n\nAfter I read the instruction “How do I ask a good question” on stackoverflow, I start entering some key words to search for relevent questions that others have ever asked. I typed “r” and “plot” because this is something that I have some knowledge of and I might be able to answer some questions about plotting in R. Then, I located the question that I answered above which is a relatively easy question. By reading the title of this question, I could easily get what they want to know, and based on my knowledge of R and ggplot2 package, it is easy for me to come up with an illustration that used ggplot() and geom_line() to plot multiple lines in the same plot. After I finished my solution, I came back to the stackoverflow page and read through others’ solutions. It turned out that there are many different ways of drawing two graphs in the same plot that I have not used before. Their ideas really helped me and provided me with more tools in my future R experience.\n\n\nInstructions to follow."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/valeriehan6/ValerieHan.html",
    "href": "blog-2023/Blog-1-submissions/valeriehan6/ValerieHan.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer).\n\nhttps://stackoverflow.com/questions/75241167/looping-through-r-dataframe-columns/75241265#75241265\n\nRelate your experience of answering the question to your reading. \n\nChoosing a question to answer and actually trying to answer it helped me understand how important a minimal reproducible example is. I also appreciated the informative titles of questions. Both helped me quickly assess if a question was something I could solve using my own experience and made me want to answer their questions more, making clear to me why the readings have such guidelines for posting questions.\nThe question I chose to answer was relatively simple with only 6 lines of code. However, when trying to answer their question, I realized that their example was not reproducible for others because they didn’t include a dataset that corresponded to their variable in the code. I ended up creating my own little example to try to understand what their issue was. In doing so, I also realized that, as the readings said, making a minimal reproducible example isn’t always that hard and that trying to make one can help you think through your bug as well.\n\nInstructions to follow."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/IanParzyszek/ParzyszekIan.html",
    "href": "blog-2023/Blog-1-submissions/IanParzyszek/ParzyszekIan.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "https://stackoverflow.com/questions/75254510/using-dplyr-correctly-to-combine-shared-values-of-a-row-to-a-new-column-of-a-tab/75254534#75254534\nIt would have been nice if this individual had included some code or an example they wanted to have answered. I was not 100% confident on what this person was asking, but if I interpreted it correctly it should give them a good start."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/loganjohnson0/JohnsonLogan.html",
    "href": "blog-2023/Blog-1-submissions/loganjohnson0/JohnsonLogan.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer).\n\nThe question that I chose was related to graphing data and the ability to use ggplot2 to visualize this data. The link to the post is included here. The question did not provide an example of their data or any code they had been working with.\n\nRelate your experience of answering the question to your reading. \n\nIn reading the examples of asking a good question on stackoverflow and the other links provided, it is clear that you must include a sufficient amount of background on the question you are asking. This can be an overview of the question you have, some example of the data, and some of the code that you have been using. In the example that I had, there was none of this. The person had 3 sentences and vagely described their problem. I did my best to answer their question, provide a link to ggplot2 cheat sheets, and provide some potential examples.\n\nInstructions to follow."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/Atefeha1995/Anisi Atefeh.html",
    "href": "blog-2023/Blog-1-submissions/Atefeha1995/Anisi Atefeh.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer).\n\nI answered one question in StackOverflow, here is the link to the question.\nMy StackOverflow profile is Atefeha1995.\n\nRelate your experience of answering the question to your reading. \n\nThis is the first time I am working on the StackOverflow website. Based on my reading, the questions and answers on this website need to follow special instructions. I tried to answer a question that I know the answer to while making sure that:\n\nMy answer is short, complete, and clear.\nI followed the StackOverflow structure for writing.\nMy answer and code are reproducible.\nI included the code sample regarding the required code formatting, etc.\n\n\nInstructions to follow."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/anphan0828/PhanAn.html",
    "href": "blog-2023/Blog-1-submissions/anphan0828/PhanAn.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions: Using If /Else Statement Operator in Pandas/Python The problem was introduced before code was given (as related from ‘asking a good question’ guide). The author was having trouble with conditionally filling his/her new column in a dataframe. He/she used an anonymous function (lambda) to add values as desired.\n\nDocument which question you answered (link to your answer). Link to my answer\nRelate your experience of answering the question to your reading. \n\nThe question was straightforward and details of the output were described in many scenarios. It “includes just enough code to allow others to reproduce the problem” (as posted in the ‘minimal complete verifiable example’ guide). Because of that, I guessed that they accidentally assign values to the same cell in the dataframe, which seemed suspicious.\nI thought that the conditions should be structured in an if-elif-else instead of two separate if-else commands. I double checked the correct if-elif-else structure of an anonymous function and found a StackOverflow post on that. Next, I tried to explain the issue he/she was having and propose a solution as well as the link to the original answer on StackOverflow. Eventually, I rewrote the code in his/her context to make sure they understand my point.\nIt was my first time ever answering a StackOverflow question. I am not sure if the author figured it out yet (there was no update up to when I submitted this homework) but I feel good for being a part of an awesome community that helped me a lot during my first year. Thank you for the meaningful homework!\n\nInstructions to follow."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/hardtme/HardtMarie.html",
    "href": "blog-2023/Blog-1-submissions/hardtme/HardtMarie.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer).\nRelate your experience of answering the question to your reading. \n\n\nInstructions to follow.\nI answered this question from stackoverflow: https://stackoverflow.com/questions/75245310/change-colors-in-bar-chart-in-r-to-other-colors/75250501#75250501\nThe original poster (OP) of the question I answered was having trouble getting a bar plot created using ggplot2 to look the way they wanted. It was very helpful that the OP provided their code with the question. However, the OP’s code used a dataset that was not built into R and the OP did not include code to create the dataset for the plot. This broke one of the guidelines for minimal reproducible examples. Fortunately, the requested plot was simple enough that I could recreate the issue using the built-in iris dataset in R. The problem turned out to be that the OP wanted to use the fill aesthetic to change the color of the bars on the plot via scale_fill_manual but did not have anything mapped to the fill aesthetic. In my answer, I provided an example very similar to the OP’s code, except I used the iris dataset with the variable Species mapped to the x aesthetic to define the bars and also mapped Species to the fill aesthetic so I could use scale_fill_manual to change the colors of the bars."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/santos-cl/dosSantosCaio.html",
    "href": "blog-2023/Blog-1-submissions/santos-cl/dosSantosCaio.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "It seemed like the Stack Overflow user Jamie was having some trouble calculating the distance between a hospital in Fresno, CA (119.85 °W, 36.84° N) and the home location of several patients.\nJamie had a data frame with the geographical coordinates of city in which the hospital patients lived and wanted to calculate the geographical distance that each patient traveled.\nJamie provided the geographical coordinates of the hospital\n\nLatitude: 36.840\n\nLongitude: -119.850\n\nIn addition, Jamie also provided the an example data frame\n\nstructure(list(major_city = c(\"Mountain View\", \"Watsonville\", \"Honolulu\", \"Los Altos\", \"Morgan Hill\", \"Fulton\", \"Oak Grove\", \"Port Kent\", \"Bedford\", \"San Jose\"), \n\nlatitude = c(37.39, 36.9, 21.31, 37.36, 37.1, 43.3, 36.69, 44.526, NA, 37.27),\n\nlongitude = c(-122.07, -121.7, -157.85, -122.15, -121.7, -76.4, -87.44, -73.409, NA, -121.84)), \nrow.names = c(NA, -10L), class = c(\"data.table\", \"data.frame\"), \n.internal.selfref = <pointer: 0x7f98af80bae0>, index = integer(0))\n\nI provided an answer using the apply function. The idea was to apply a function rowwise which returned the distance from the hospital to the home location of each patient.\n\ndf <- data.frame(major_city = c(\"Mountain View\",\"Watsonville\", \"Honolulu\", \"Los Altos\", \"Morgan Hill\", \"Fulton\", \"Oak Grove\", \"Port Kent\", \"Bedford\", \"San Jose\"),\n                 latitude = c(37.39, 36.9, 21.31, 37.36, 37.1, 43.3, 36.69, 44.526, NA, 37.27),\n                 longitude = c(-122.07, -121.7, -157.85, -122.15, -121.7, -76.4, -87.44, -73.409, NA, -121.84))\n\ndf$distance_m <- apply(df, MARGIN = 1, function(x) {\n  geosphere::distGeo(as.numeric(c(x['longitude'], x['latitude'])),\n                     c(-119.85, 36.84)) \n  })\n\ndf$distance_km <- df$distance_m / 1000\n\nThe ouput provided the distance for all rows in the data frame\n\n      major_city latitude longitude distance_m distance_km\n1  Mountain View   37.390  -122.070   206527.4    206.5274\n2    Watsonville   36.900  -121.700   165083.2    165.0832\n3       Honolulu   21.310  -157.850  4045683.3   4045.6833\n4      Los Altos   37.360  -122.150   212440.1    212.4401\n5    Morgan Hill   37.100  -121.700   167241.2    167.2412\n6         Fulton   43.300   -76.400  3731976.3   3731.9763\n7      Oak Grove   36.690   -87.440  2879678.0   2879.6780\n8      Port Kent   44.526   -73.409  3962114.4   3962.1144\n9        Bedford       NA        NA         NA          NA\n10      San Jose   37.270  -121.840   183321.3    183.3213"
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/santos-cl/dosSantosCaio.html#my-experience",
    "href": "blog-2023/Blog-1-submissions/santos-cl/dosSantosCaio.html#my-experience",
    "title": "Asking Good Questions",
    "section": "MY EXPERIENCE",
    "text": "MY EXPERIENCE\nThis was my first time answering questions on Stack Overflow. This question in specific was good because the poster provided a minimal reproducible example. When I was looking for questions to answer, I saw several questions that could not be answered because they did not provide examples. Overall, it was a pleasant experience, being able to provide answers to a community that has greatly helped me when I taking my first steps towards learning R."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/sudi007/SudeshBhagat.html",
    "href": "blog-2023/Blog-1-submissions/sudi007/SudeshBhagat.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it. After reading the content on both the links, the question I chose to answer was from Stackoverflow(https://stackoverflow.com/questions/61086231/writing-a-for-loop-in-r-for-knn-method-with-cross-validation?noredirect=1#comment108075908_61086231) and R help(https://community.rstudio.com/t/converting-factor-variable-into-numeric/158479).\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer). After reading the content on both the links, the question I chose to answer was from Stackoverflow(https://stackoverflow.com/questions/61086231/writing-a-for-loop-in-r-for-knn-method-with-cross-validation?noredirect=1#comment108075908_61086231) and R help(https://community.rstudio.com/t/converting-factor-variable-into-numeric/158479). The link to my answer to the questions I answered is already provided in the first part as well as here and here. My ID for the question and answer on Stackoverflow(https://stackoverflow.com/questions/61086231/writing-a-for-loop-in-r-for-knn-method-with-cross-validation?noredirect=1#comment108075908_61086231) is user13073332 whereas on R help is Sudi. I had asked this question on Stackoverflow and I landed up answering it, following a discussion about it on Stackoverflow. As a result, my answer is also provided under the question\nRelate your experience of answering the question to your reading. \n\nMy experience of answering the question based on the reading. When I had answered this question, I was not aware of the correct way to ask questions. Based on the readings, the question asked meets the first criterion for a good question, which is that the question should be on topic and suitable to the Stackoverflow website.The portal Stackoverflow invites questions about programming and the question asked met this requirement. The second requirement is to research and search the existing set of questions to ensure that the question you intend to ask is not duplicated. Although the questioner (which, in this case, was me) had researched and searched the existing set of questions to look for a suitable answer, there is no proof provided to indicate that the question was not repeated/duplicated. The questioner had not linked any seemingly similar questions on this topic existing on the portal. It could also be that there were no such questions. Thereafter, another requirement is that the title of the question summarizes the specific problem faced by the researcher. This condition is not met by the questioner as the title could appear a vague and ambiguous to those attempting to answer the question, although the question itself carries some details, if not all. This is why the person attempting to answer this question asked counterquestions for further clarification. While offering clarification to the question, I stumbled upon the answer myself and answered it on the portal as user13073332. With this experience of asking and answering questions, I learned the importance of providing all possible details required to answer the questions satisfactorily. A question that is clear begets answers whereas one that is unclear only invites further questions. I would also like to link another question I had answered on R help. In this case, the questioner was not me but I had provided the answer under the name “Sudi”.\nThe title of the question is not clear to the extent that there is no indication that it may be a question related to R as required by the guidelines of the portal. However, the person asking the question provides all the required information as part of the question, albeit leaving room for grammatical correction. No vignettes or code demonstrations were provided. The questioner did not allude to other similar questions on the portal or their search about such questions. As I was the second person answering this question, I had help in the form of the answer from the person who had attempted the question before me. Their answer had code information, which was useful while providing an answer.\n\nInstructions to follow."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/gnbltrn/BeltranGino.html",
    "href": "blog-2023/Blog-1-submissions/gnbltrn/BeltranGino.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Answering a question was hard for me, given my limited experience with R and programing. Instead, I focused on evaluating the quality of the question and found one that needed some guidance–based on the materials we read in class about asking good questions. A student had copied and pasted a homework, which contained multiple questions about a data set. My response was aimed at suggesting the question needed to be more specific to get the help needed. Link to my response https://stackoverflow.com/questions/75254300/uic-assignment-need-help-please-let-me-know-how-to-do-them/75254399#75254399\nSome else had just answered the same question, and included a link with specific guidance for students seeking help for homework (see link below). I read this resource and found it very informative, which made me contemplate the other side of every question… the answer. I realized my answer was perhaps too simple. I also realized that a good answer can be recycled and used many times and it becomes a guideline.\nAsking about homework link https://meta.stackoverflow.com/questions/334822/how-do-i-ask-and-answer-homework-questions\nThanks, Gino"
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/gnbltrn/BeltranGino.html#prompt",
    "href": "blog-2023/Blog-1-submissions/gnbltrn/BeltranGino.html#prompt",
    "title": "Asking Good Questions",
    "section": "Prompt:",
    "text": "Prompt:\nAsking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer).\nRelate your experience of answering the question to your reading. \n\n\nInstructions to follow."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/motinaaa/KashanianMotahareh.html",
    "href": "blog-2023/Blog-1-submissions/motinaaa/KashanianMotahareh.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer).\n\nBelow is the link to one of the questions I answered on StackOverflow (https://stackoverflow.com/questions/74797820/find-value-in-matrix-starting-from-two-columns-value/75253008#75253008)\n\nRelate your experience of answering the question to your reading. \n\nMy attempt was to answer a question to which I knew the answer. To be honest, finding a question that I can answer has been challenging! It took me most of my time to find a question :)\nIn answering the question, I tried to be clear, concise, and complete. According to StackOverflow’s structure, I provided reproducible code and a formatted answer.\n\nInstructions to follow."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/Sabrenar/RutledgeSabrena.html",
    "href": "blog-2023/Blog-1-submissions/Sabrenar/RutledgeSabrena.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer). I answered the question linked below: (https://stackoverflow.com/questions/75248261/cant-install-packages-in-r) https://stackoverflow.com/questions/75248261/cant-install-packages-in-r/75251062#75251062\nRelate your experience of answering the question to your reading. \n\nI chose an installation issue question, where the person asking was having issues installing a specific package. Answering the question I chose was rather straight-forward, since the answer to their question was hidden in the midst of their error message. According to stackoverflow’s Asking a good question page, authors should “explain how [they] encountered the problem [they are] trying to solve, and any difficulties that have prevented [them] from solving it [themselves].” Yet, the author of this particular question appears to only have attemptted installing twice before giving up. They go on to say “Any package I try to install raises the same issue,” which cannot be true since the error message is specific to the package and its dependencies. As such, I’m not sure if their question was helpful to resolving their issue, since there seemed to issues with not having admin rights that was complicating the installation process. In conclusion, I don’t think this question should have been posted on StackOverflow and should have been directed to the author’s IT department.\n\nInstructions to follow."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/luobo119/YichuanBai.html",
    "href": "blog-2023/Blog-1-submissions/luobo119/YichuanBai.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer).\nRelate your experience of answering the question to your reading."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/AArabio/ArabioAlexandra.html",
    "href": "blog-2023/Blog-1-submissions/AArabio/ArabioAlexandra.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer).\n\nLink to question\nAnswer: Once using the plot function you are building the base for your figure. To be able to add to that initial figure you can use the lines() function or the points() to add any addition data information to that plot.\nGiven your data, you could use the following code to accomplish your task.\n`{r} x <- seq(-2, 2, 0.05) y1 <- pnorm(x) y2 <- pnorm(x, 1, 1) plot(x, y1, type = “l”, col = “red”) plot(x, y2, type = “l”, col = “green”)\nplot(x, y1, type = “l”, col = “red”) + lines(x, y2, type = “l”, col = “green”) ``` This will produce the following figure.\n\n\nRelate your experience of answering the question to your reading. \n\nFrom the Stack Overflow ‘How do I ask a good question?’, it discussed how it is easier to provide answers to questions when they are summarized, specific, and reproducible. Because of this, I kpet these in mind when searching for questions to answer. I found a question that was to the point in what they needed to accomplish and provided simple data to work with as an example. Following the advice from Stack overflow ‘How to create a Minimal, Reproducible Example’ I started from scratch on my own device and broke the question into simple, traceable steps.\n\nInstructions to follow."
  },
  {
    "objectID": "blog-2023/Blog-1-submissions/Starwiiin/MohammadiarvejehParvin.html",
    "href": "blog-2023/Blog-1-submissions/Starwiiin/MohammadiarvejehParvin.html",
    "title": "Asking Good Questions",
    "section": "",
    "text": "Asking good questions is a valuable skill to have - asking questions in an online setting is both easier and harder than asking questions in person: we can prepare to ask a question but we are also expected to prepare. The links posted here give some advice on how to ask good questions:\n\nstackoverflow’s Asking a good question\nR’s Posting guidelines\nminimal complete verifiable example, minimal reproducible example\n\nFollow these links and read through the advice given, then\n\nPick at least one question from stackoverflow or the R help and answer it.\n\nWrite a blog post answering the following questions:\n\nDocument which question you answered (link to your answer).\nRelate your experience of answering the question to your reading. \n\n\nInstructions to follow."
  },
  {
    "objectID": "blog-2023/Prompts/Blog-3/Prompt.html",
    "href": "blog-2023/Prompts/Blog-3/Prompt.html",
    "title": "Title of your post",
    "section": "",
    "text": "The goal of this week’s blog is to document what you are doing when things do not go according to plan.\nSimilar to previous exercises, we have a specific use case in mind: we want to build a book from a github repository.\nWhat happens in practice usually, is that we run into some problems. So your real task turns into that of a bug-hunter and fixer. Luckily, you have a community (the class discussion board) who might be able to help you.\n\n\nBuild the html version of the 2nd edition for Hadley Wickham’s book Advanced R Programming from a github repository.\nSteps:\n\nClone the repository https://github.com/hadley/adv-r.\nOpen the R project in the repository in RStudio.\nActivate the Build tab (by default in the top right panel). Click on the Build Book button.\nThe book will be available in html format as index.html\n\nDeliverable (1): what is the last word in chapter 15? - You don’t have to answer this question, if things don’t work.\n\n\n\nErrors happen, they are frustrating, but if we learn something from them, we can turn them into valuable experiences.\n\ncheck the Questions and Answers forum in Canvas whether there is a solution available for your problem.\nif the above document does (not yet) include your question, document the error you encounter (be as concise and specific as you can at the same time)\nif the Question and Answers forum does (not yet) include a solution, describe one approach on how you tried to solve the problem (and how this did not work).\nsubmit the description of your problem in Canvas at Discussions > Questions and Answers. Write the paragraph in the mindset that you want to get help from somebody, and you try to describe the problem you are encountering.\nExtra points (1 pt for the first suggested working solution): post a solution to one of the problems in the Questions and Answers forum (your own does not count!).\n\nDeliverable (2): Write a paragraph on the biggest problem you encountered when you were building the book, (and how you managed to solve it.)\nYou can write your experience directly into the README.Rmd file. Just make sure that you change the yaml at the top: change the author at the top, and give your post a new title (don’t change the category :))\nCommit and push to your repo and you are done!"
  },
  {
    "objectID": "blog-2023/Prompts/Blog-4/Prompt.html",
    "href": "blog-2023/Prompts/Blog-4/Prompt.html",
    "title": "Title of your post",
    "section": "",
    "text": "The plyr package has by now been replaced by other, even faster packages, but the idea of Split, apply, combine is as relevant as ever.\nRead the paper The Split-Apply-Combine Strategy for Data Analysis by Hadley Wickham.\nWrite a blog post addressing the following questions:\n\nThe R code for the split-apply-combine paper is posted with the paper. Pick one of the examples demonstrating plyr functionality (such as dlply or ddply, …) and rewrite the example using functionality from the package dplyr. Make sure that your example works and returns identical results.\nWhich (base R) functions do you know that support the split-apply-combine strategy? In your opinion, are these sufficient? State why or why not?\nThe ChatGPT response to the prompt “Describe the split-apply-combine paradigm” is given below. Generally, the chatbot’s answers are decent. ChatGPT does have problems getting details right. Which details would you change in the response?\n\n\nThe “split-apply-combine” paradigm is a data analysis strategy used in statistics and data science to analyze grouped data. It consists of three steps:\nSplit: The data is first split into groups based on one or more variables of interest.\nApply: A specific operation or function is applied to each group of data, usually for the purpose of aggregating, summarizing, or transforming the data within each group.\nCombine: The results of the operation applied to each group are then combined and returned as a single output.\nThe split-apply-combine paradigm is particularly useful in cases where the data cannot be analyzed as a whole and instead must be analyzed in smaller, more manageable chunks. This allows for more efficient data processing and improved scalability. The paradigm is commonly implemented using tools such as the “groupby” function in the R and Python programming languages, and the “dplyr” library in R.\n\nYou can write your answers directly the README.Rmd file. Make sure that the file knits (you will need to activate any packages your use in your code chunks with a call to library(xxx), where xxx is the name of the package, such as plyr ). Commit your changes and push to your repo; add any files in the README_files directory to your repository."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/xyzyc/ZhouYingchao.html",
    "href": "blog-2023/Blog-2-submissions/xyzyc/ZhouYingchao.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth.\n\nI read the chapter “9. Personal access token for HTTPS”.\nThis chapter mainly teaches us how to set up a personal access token (PAT) to allow the local computer talk to the GitHub. Note the password for login on GitHub is not an acceptable credential.\nThe whole generating and storing process may be done through R package usethis. Commands usethis::create_github_token() will generate the PAT and gitcreds::gitcreds_set() can store the credential.\nYou may also generate the PAT on https://github.com/settings/tokens and store the token generated at a secure place.\nBu default, the APT will expire in 30 days. And you need to re-generate and re-store the APT in the same steps.\n\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?.\n\nIt was a mess…\nI once worked with a classmate. We had a Github repository but I didn’t know how to push the changes from Rstudio or terminal, so every time I actually only committed the changes without pushing them to Github. I also occasionally uploaded my R script to Github page.\nHowever, once after I made a major change, I didn’t upload my file in a timely manner and my classmate worked with the wrong code for a day. When they taught me how to push to Github after this, the main branch was several steps ahead due to me uploading .R file. We had to force the push and lost some commits.\nUnfortunately, it turned out that we needed some old code that we lost in that force push… And we had to take some trouble to recover the commits.\nIf I had learned how to push from Rstudio (or just terminal) and only updated the code through push, we would have a clean record of the code.\n\nGive an example of one new git feature that you learned about from Jenny Bryan’s book..\n\nYou may use git remote set-url to change between https://github.com/usr/project.git and git@github.com:usr/project.git and switch between HTTPS and SSH credentials. (I currently use SSH. It’s good to know I can switch freely.)"
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/kundan7kumar/KumarKundan.html",
    "href": "blog-2023/Blog-2-submissions/kundan7kumar/KumarKundan.html",
    "title": "Stat 585",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth.\n\nSolution: I have gone through Chapter 18 in depth, it provides a comprehensive introduction as well as hand-on experience to R Markdown which is a wonderful tool for creating documents and reports, it also allows to embed R code within a document and produces a various format output like HTML, pdf, word using knitr options. It also helps in creating the first R Markdown document with ‘Hello World’ and also covers the basics of formatting and styling text, including how to add headings, images,bullet points, and tables. Apart from formatting and styling it also explains how to customize CSS and themes to the document. It will help with creating professional reports as well as documents of the work. Moreover, it also explains the how to connect and push R markdown file to GitHub and how to publish the report.\n\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?.\n\nSolution: Being a software developer in the past, I have used versioning tools like git and subversion. When I started using git within my team, I ended up with multiples mishap in the team projects. one of the scenarios I pulled the code and try editing it but forget to commit and push, and then I pulled the latest version again which ended up losing my own work. As there is no backup copy of my code and I was working on master copy, the pulled request overwrites my work.\nIt could be avoided if I used branching concept of git. Branching ensures my work is saved even if I pull the latest version of the code from the main branch. If I knew the standard procedure of git, I may not end up losing my work. I think branching is one of the best ways to cooperate and contribute to team projects.\n\nGive an example of one new git feature that you learned about from Jenny Bryan’s book..\n\nSolution: From chapter 12 of Jenny Bryan’s book, I learnt how to connect RStudio with Git and GitHub. In my case, Somehow, RStudio are not able to detect git, install the git explained in chapter 6 of the book and finally able to connect RStudio to git and GitHub."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/anyeshar/RayAnyesha.html",
    "href": "blog-2023/Blog-2-submissions/anyeshar/RayAnyesha.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth.\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?.\nGive an example of one new git feature that you learned about from Jenny Bryan’s book..\nWrite a short (100-150 words) summary of the chapter you read in-depth. I read chapter 9 about the person access tokens for HTTPS. GitHub requires a personal access token so that they know the person who is trying to make changes is the correct user. The password we use to login is not sufficient to verify credentials which is why we need this specific personal access token. All you have to do is generate a token and then enter it when you set up credentials. You can set a time for expiration, and once the token expires you have to regenerate a new one. This chapter also details the difference between HTTPS and SSH. HTTPS is strongly recommended over SSH because it is easier to work with and can be used with GitHub’s API which is called in some R packages.\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How? A big problem working on a group project is sharing code. Often we can split up the work so we don’t need to share code, but if we do we often email files back and forth which can be tedious and sometimes not the most up to date. Using GitHub would solve this problem and branching could ensure we can work parallelly.\nGive an example of one new git feature that you learned about from Jenny Bryan’s book. I also read the chapter on branches. I have never used branches before. This seems important because you can work on stuff without messing with the main branch."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/Landon-Getting/GettingLandon.html",
    "href": "blog-2023/Blog-2-submissions/Landon-Getting/GettingLandon.html",
    "title": "Stat 585",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth.\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?.\nGive an example of one new git feature that you learned about from Jenny Bryan’s book.."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/Landon-Getting/GettingLandon.html#chapter-27-the-repeated-amend---summary",
    "href": "blog-2023/Blog-2-submissions/Landon-Getting/GettingLandon.html#chapter-27-the-repeated-amend---summary",
    "title": "Stat 585",
    "section": "Chapter 27: The Repeated Amend - Summary",
    "text": "Chapter 27: The Repeated Amend - Summary\nDuring Lab 1, you may have encountered a similar situation to our group. Our repository was quickly filled with many small commits that ranged from changing a single argument to entire sections of the lab. The repeated amend workflow will be useful in the future as I strive to make my version history more digestible for collaborators.\nInstead of performing many small commits, the amend action allows you to edit a previous commit as you make unforeseen positive progress. This is possible in RStudio through the “amend previous commit” check box in the commit interface window. Once you have completed a section of code or accomplished a goal, then commit. The commit history will show you finished the section or accomplished the goal in a single commit rather than many smaller commits. Once you’ve tested the code and feel good about the commit, you can push it and repeat the process for the next task."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/Landon-Getting/GettingLandon.html#team-mishap",
    "href": "blog-2023/Blog-2-submissions/Landon-Getting/GettingLandon.html#team-mishap",
    "title": "Stat 585",
    "section": "Team Mishap",
    "text": "Team Mishap\nIn an introductory data mining class, my group took an especially long time to develop, train, and test our model because no one knew which file was most updated or advanced. We desperately needed a lesson on reproducible code as well. R scripts were named after the author and usually had a number or adjective to further describe the iteration (ex. Landon_6 or Zach_CleanData). Git would have eliminated this confusion through a main branch that is pulled from and pushed to as progress is made individually.\nIn many of the scripts, file paths were hard coded. Instead of saving a cleaned or manipulated data frame as a new file in a common repo, we each spent hours running code to produce it as an object in our local R Studio. It was a disaster. The group has come a long way since the project and it is funny to look back on our ineptitude."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/Landon-Getting/GettingLandon.html#new-git-feature",
    "href": "blog-2023/Blog-2-submissions/Landon-Getting/GettingLandon.html#new-git-feature",
    "title": "Stat 585",
    "section": "New Git Feature!",
    "text": "New Git Feature!\nIf you become stuck during a cycle of repeated amends (or at any time prior to a commit), utilize the “Diff” or “Commit” actions in RStudio to either discard all changes or discard a chunk of changes."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/charlestbonk/BonkCharlie.html",
    "href": "blog-2023/Blog-2-submissions/charlestbonk/BonkCharlie.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth.\n\n\nThe chapter the I read was “29. Pull, But you have Local Work”, where Bryan talks through how to resolve a common way to have merge conflicts: when you want to push but can’t until you pull but you have changes locally, so you can’t pull with automatic merging. She covers both how to manage pulling with in-progress work both commited and not commited. She also talked about what to do when the easier steps don’t work out; git stash won’t always work, so here’s what to do if it doesn’t. She also touched on rebasing, and on continuing your own work in a temporary branch from main.\n\n\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?.\n\n\nWhile working on my Capstone project in undergrad, a group member of mine had his laptop destroyed by a dog knocking a beer over. We lost about 2 weeks of work that day. If we were using git, we (probably) would have lost significantly less work, and I wouldn’t have had to stay up multiple days to work on the code that he had lost. Git would have been good both to help store the code, that way things like that could have been easily avoided and worked around, but also, git pushes and pulls are much easier than emailing R scripts around.\n\n\nGive an example of one new git feature that you learned about from Jenny Bryan’s book..\n\n\nI am horrified of merge conflicts. I still am horrified of merge conflicts. But now, I am a little less scared, especially knowing that they are common and happen all of the time. Even if I forget the exacts on how to manage merge conflicts, I do also know now where I can go for a relatively clear step-by-step walkthrough of managing pulling when I have work of my own (becuase that is easier than saving all of my work in an external document and then deleting my directory locally and then make a new directory and connect it to the repo and then move my changes back, just so I can pull the most recent work.)"
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/TWiedRW/WiederichTyler.html",
    "href": "blog-2023/Blog-2-submissions/TWiedRW/WiederichTyler.html",
    "title": "Stat 585",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth.\n\nFor this blog, I looked at Chapter 29: “Pull, but you have local work”. When work is saved locally and not saved to GitHub, pulling the repo is done normally without error. If one pulls and the file exists differently in the repo, then an error occurs. git stash will save local changes when pulling. This won’t change the fact that the files are still in conflict, but it provides temporary relief.\n\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?.\n\nThe biggest mishap is probably having merge conflicts with git. Sometimes when I can’t figure out how to pull/merge when conflicts exist, I simply delete what I have and pull from the repo to start again fresh (after saving my work somewhere locally).\n\nGive an example of one new git feature that you learned about from Jenny Bryan’s book..\n\ngit stash save and git stash pop. Although the author mentions staying away from these in favor of other methods, I think they are neat tricks!"
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/charchit/ShuklaCharchit.html",
    "href": "blog-2023/Blog-2-submissions/charchit/ShuklaCharchit.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth.\n\nI read Chapter 1 and Chapter 30 in depth and glanced over the rest of them to understand the basic functionality of GIT. Chapter 1 talks about why GIT is important, and chapter 30 talks about working with your future self.\nOne of the most important feature of GIT is version control. It allows user to use “track changes” like function of microsoft word but much better. There are many hosting services like github, bitbucket, gitlab or self hosting. Learning how to use GIT initially has a steep learning curve however it pays off in the long run when a lot of the conflicts and new code is written and need to be rewritten in the future. Other advantages of GIT relates to “Exposure”: showing your work to the world, “keener”: learning from other people, “Collaboration”: feature such as Google Doc (multiple people working on the same file at the same time) and editing/saving etc like an email. There are a few types of repository, most common ones are public and private. The above discussed tools and tech of github allows to fix issues, bugs in softwares, and collbaorate effectively in any programming language including R.\nTime Travel: As we all know time travel is impossible in our current understanding of universe and physics. However, the closest thing to time travel we have is the past files and storage. Git allows you to go back in time and check your previous work to use it in the future work or even copy or build something off of it completely new. Two functions of Git such as History and Blame helps in seeing the past work and the person who committed those changes.\n\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?.\n\nBiggest mishap are usually about the contributions and communcation in a team. I do not think it would be completely avoided by the GIT but it could however be helpful to have a version control to communicate and collaborate effectively within the team. Also, having cloud storage helps a lot in working on different computers (considering me and my tomorrow’s self is a team). One of the research I am doing needs files to be updated constantly in python. I am using Box drive as a version control. If I had to create a new file everytime I make changes in the file I will have a thousand files in one month. My work is mostly only two people and we are fairly good in communicating with each other so it does not conflict too much. However, in the past when there were 3 or more people, it was a big problem to divide the work. Git can help in dividing the work very well and people not butting into each other’s work.\n\nGive an example of one new git feature that you learned about from Jenny Bryan’s book..\n\nI heard about GIT many times in the past few years however I have never used it. This is the first time installing and using the GIT in a class, so everything in the Jenny Bryan’s book is new to me and there is a lot to learn. I lerned that it would be hard intially but it will get better with time, however one thing which might always bother even after being good at it is merging. I am not really sure how it will be hard but I am looking forward to learn to use this tool better in my projects and the labs and hopefully in my research."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/kellynay/NascimentoThompson_Kelly.html",
    "href": "blog-2023/Blog-2-submissions/kellynay/NascimentoThompson_Kelly.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth.\n\nChapter 20 (“Repo, commit, diff, tag”) Git is a version control framework aiming to help developers who collaborate on big software projects. Repo or repositories are set of files that Git manages as they evolve. For new or existing projects, RStudio users are recommended to dedicate a local directory for it, create an RStudio project, and create a Git repository. By doing so, these applications will leave notes for themselves in hidden files or directories. When saving files, a commit is made, taking a snapshot of all files in the project instead of saving individual files. Diff is the set of differences between two file commits. One common practice in Git projects is writing a commit message each time a commit is made. These messages help colleagues understand recent changes made in the project. A tag is a name that represents the version of the project or references the last commit made.\n\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?.\n\nMy research involves modeling soil erosion at the STRIPS sites (https://www.nrem.iastate.edu/research/STRIPS/). I get rainfall, runoff, and sediment field data for ground truth validation purposes from another research group. These daily measurements from 2016 to 2022 are saved in Excel files created from R scripts. The data includes column names such as “treatment, site, date, rainfall, and runoff.” When I filtered the data, I noticed the rainfall data was included under the treatment column, and they are not supposed to be there. I contacted the collaborator who handled the data and asked the reasoning behind it; he explained it was for graphing purposes, saying that he would add an updated file to the Cybox folder removing the rainfall data from the treatment column. Git could avoid this issue because we would have access to the scripts that generate such files, and I would not have to go to Cybox to download a new version of the field data. Thus, it is important to work in a version control system in a case like this, where files are updated every year.\n\nGive an example of one new git feature that you learned about from Jenny Bryan’s book..\n\nI followed the steps on Chapter 11 - “Connect to GitHub”. I created a new repository on github.com and cloned the repo to my local computer using the Git Bash shell. Following the book instructions I was able to change my working directory, list its files, and display the README file. I also installed GitHub Desktop and cloned repos from github.com. I tested by cloning Blog 1 to my computer."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/mattkava/KavanaughMatthew.html",
    "href": "blog-2023/Blog-2-submissions/mattkava/KavanaughMatthew.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "Write a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth. For this blog, I read Chapter 30, which is called “Time Travel: See The Past”. It discussed the various ways in which one is able to retrieve a prior version of a project if they desire to make a change or simply want to analyze the history of their work. The first section summarizes hyperlinks, which allow access to commits on a Github repository and access to past versions. Hyperlinks allow one to select specific lines of code in a certain state and share them with others, making for easy collaboration on any project. The “blame” feature enables those who have access to see the commit history, including who edited a file and when such edit occurred. Similarly, the “history” feature enables one to see commits on a single file rather than the entire repository. Finally, the “search” feature enables a user to locate code, commits, or comments on specific files in a repository.\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?. In my R programming class during my senior year of college, my group and I were working on a project that entailed analysis of air pollution and its impacts on a number of health conditions, such as obesity, asthma, diabetes, and cancer. Each member of the group analyzed a different variable and produced a number of graphs using ggplot2 as well as linear correlation tests and graphs that were produced using the base R capabilities. Unfortunately, this occurred during the busy period at the end of the semester, and several of our 5 group members had many other projects and exams that were taking place. Additionally, one of the group members got badly sick, and was unable to attend group meetings or even complete much work virtually. Hence, group meetings came to a halt, and we had made little progress on the project with only two days remaining until the due date. Hence, we ended up pulling an all nighter the night before the due date in which we all sat down to knock in out. There were varying levels of experience with R programming, so several of us had to teach others how use ggplot2 and several other R packages. It was frustrating to have to do so much work last minute, and git definitely could have solved this problem. It would have been easy to share R markdown and code files via a shared repository so that others in the group could see what had been done and by who. Additionally, using git would have allowed our team to provide suggestions to each person’s contribution and allowed us to continue progressing on the project remotely, even when some members were not available.\nGive an example of one new git feature that you learned about from Jenny Bryan’s book.. One example of a git feature that I learned about from this chapter was the issue search feature. This is an advanced search feature that allows for a quick way to search for specific issues within a repository using the built-in features of is:issue and is:open. This allows someone to easily find and troubleshoot issues without needing to look through hundreds or thousands of lines of code."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/HarunCelikOtto/CelikHarun.html",
    "href": "blog-2023/Blog-2-submissions/HarunCelikOtto/CelikHarun.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nMy answers:\n\nWhile I learned new things from all the chapters I had an interest in checking, I especially found the “Resetting” chapter to be resourceful. Simply, there are three methods for resetting a commit. The git reset ---hard HEAD^ will undo everything, losing all changes. The git reset HEAD^ will only undo the commit and clear the stage but your files stay the same. Finally git reset --soft HEAD^ will undo the commit and restore the staged changes. If the intention is to change the earlier message, there is also a possibility to amend recent commit messages by using git commit --amend -m \"New commit message\". Resetting is an important component to commit’s because we all make committing mistakes in our projects and these offer an alternative to “burning it all down.”\nI think the biggest mishap has always been not taking enough time to properly design the workflow that we wanted to use as a team. We would have one directory in Box, another in Github and people would start using their own local files for work without committing and since some branched and others didn’t, Git would have a difficult time understanding our project. An effort I want to make moving forward is really detailing exactly how we want to move forward with workflow and incorporating everyone’s ideas on workflow flexibility as projects evolves.\nI did not know about the --amend command. I also only recently learned about the different reset options after I made mistakes to a repository that I burned down (but didn’t have to had I known about these commands ahead of time)."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/HaomingWang123/WangHaoming.html",
    "href": "blog-2023/Blog-2-submissions/HaomingWang123/WangHaoming.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth.\n\nI read the Chapter One of “Happy git and github with R”. After reading this chapter, I had an overall idea of the purposes of using Git and GitHub to improve our R programming experience. I have learned that, with GitHub, not only can we collaborate with our colleagues on projects in a more convenient way, but we are also provided a real-time backup and a record of our work progress. This backup helps us easily pick up our previous work, and the record of our work progress makes the bugs easier to be detected in case we fail to get a desired result. Another interesting point about GitHub that I learned from this chapter is Pull Requests. I found it useful especially for developing those complex packages with many different functions.\n\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?.\n\nOnce I had a project that requires me to generate some training data and use it to train a neural network model. I created two R script files, one for my training data and another for my neural network training model. After I generated my data, I forgot to save it in my local file and I directly used it to train my model. Since the data was quite large, the neural network training took me about 40 minutes. As R finished training my model, it suddenly crashed and I failed to save all my data and model which was very annoying. However, with git, although I might fail to save my model locally if my R crashes, I still have my codes and I can immediately get my training data by running the codes. In this case, it would take me much less time to restore all my work and model.\n\nGive an example of one new git feature that you learned about from Jenny Bryan’s book..\n\nOne new git feature I learned about is the user’s ability to track the package development and do their own modifications as the proposed changes. This feature provides me a platform to get a closer look at those packages I frequently use. After knowing that I am also able to do some modifications to make them better, I am also motivated to thoroughly understand the functionality of those famous packages."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/valeriehan6/HanValerie.html",
    "href": "blog-2023/Blog-2-submissions/valeriehan6/HanValerie.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth.\n\nI read https://happygitwithr.com/workflows-browsability.html#workflows-browsability, which talks about which files should be saved to a repository to make for a good browsing experience.\nGitHub displays Markdown files well (but not RMarkdown or HTML), so when writing in RMarkdown, you should make sure to save the intermediate Markdown file to the GitHub repo. This can be done in the YAML header with\n\noutput:  \n  html_document:  \n    keep_md: TRUE\n\nAlso note that any file named README.md will automatically appear on the GitHub page of the directory it’s in.\nData file-wise, deliminated files (.csv or .tsv) are rendered well by GitHub, though some cleaning may need to be done since GitHub is a bit picky with certain formatting like quotes. For results files, PNGs are the best, though GitHub has added some PDF functionality. For other document types, the open-source Pandoc program can convert many different formats into Markdown.\n\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?.\n\nIn general, the biggest team project mishaps have been when one person isn’t contributing. I’m not sure this could be directly solved with GitHub since we were all aware the person wasn’t contributing. However, if the instructor required that the project used a GitHub repo to save work/progress (and would check commits on the repo), perhaps the non-contributing member would have felt more pressure to contribute to the repo. In all but one of the code-heavy projects, we did use GitHub to save our work (though it wasn’t available to instructor) and for non-code stuff we used Google docs, so we didn’t face other direct problems that would’ve been solved by git.\n\nGive an example of one new git feature that you learned about from Jenny Bryan’s book..\n\nI learned a new workflow https://happygitwithr.com/repeated-amend.html. I didn’t realize that it could be valuable to commit but not push when in “WIP” mode to create little “footholds” for yourself. I’ll try to use the command:\ngit commit --amend --no-edit\nin the future."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/IanParzyszek/ParzyszekIan.html",
    "href": "blog-2023/Blog-2-submissions/IanParzyszek/ParzyszekIan.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "Chapter 27: The Repeated Amend: Ian Parzyszek 1)\nIn this chapter we focused on situations where you are making continual changes and updates to a project, but you don’t want to continually have a lot of commits. This could look sloppy and not as useful. However, you also do not want to have very few commits and not have a lot to fall back on. They gave an example of a rock climber and you want to have enough ankers to protect you, but too many can slow you down. They introduced the idea of adding the idea of “WIP” amendments. This is used when you made some changes and you may be in the middle of something and it will signal to other people that more commits may be coming. It seemed to me that ideally you want to have “WIP” comments which denotes that these changes only exist in your local repo, yet on git. Then you can continue to finish what you are working on. And on your end you may see a history that looks like this: A – B –C – WIP–D But once you finish what you have done push it only once you have finished D…then your repository commit history will look like this: A—B—C—D (much nicer) The Chapter went on to talk about what if you did push this intermediate step of WIP what do you do? Should you go back and change it so it looks nicer, should you not? And it all depends on the collaborators you have and if you believe that may have pulled from Git.\n\nThe biggest mishap I have had in a group project (that maybe git could be useful) was probably when two people were working together in the same room on part of the project and someone else was working remotely. What had happened was we were both making changes to the same part of the project at the same time, but didn’t know about it then when we came back together we found out that now we have to find a way to bring everything together again. I think maybe git could have been used in a way that it could have found a way to merge to two versions together and we could find a way to pick and choose which sections we would keep. I know we said we would learn about this soon, so I’m not exactly sure how this works in git, but I imagine it could be helpful.\n\n3). I don’t think this is necessarily a feature of git itself but rather an understanding that git users have, and that is the “WIP” commit message. Which can be extremely usefully whenever you are working with a group. If you accidently push something it lets your group know that you are in the middle of something and it is not yet to finalized or have a functional project yet. And it is also useful so that you yourself won’t have bunch of cluttered commits in your history."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/loganjohnson0/JohnsonLogan.html",
    "href": "blog-2023/Blog-2-submissions/loganjohnson0/JohnsonLogan.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth.\n\nI read Chapter 16 for a more in-depth understanding of how to start using GitHub with RStudio with existing projects. Assuming GitHub accounts are already created, Jenny recommends starting a new repository for the project. On your local machine, all your scripts and code should be in a single project. Because it is your own local files, your are cloning to your local machine. Using the “usethis” package from R, it is simple to set up a GitHub repository on your machine. The “usethis” package performs some additional set up in the background. There is a more manual method to set up the repository, however, it is just not as simple. You can then copy your R projects into the newly created GitHub repository on your computer. You can then begin to commit and push your files to GitHub and confirm that they transitioned over to GitHub correctly.\n\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?.\n\nWhen I first began using R and RStudio, a fellow graduate student was helping me learn how to code while also providing his own code to share on the project. In this instance, we both had code on our computer that had various changes made independently of each other. After a few months, we both had worked on and off with these data. Had we been using GitHub, it would have been a lot easier to share the tips and tricks that we both learned from each other to make the code better. We also would have been able to keep up with each other’s analyses a lot easier than sending code over email.\n\nGive an example of one new git feature that you learned about from Jenny Bryan’s book..\n\nI am basically brand new to git and GitHub. I’ve learned more about the commit, push, and pull process. Understanding how these function helps me a lot. I realize that I can keep files on my computer without having to worry about pushing everything I do to GitHub. I also better understand the process of pulling, committing, and pushing to always have the most up to date version of a piece of code."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/Atefeha1995/AnisiAtefeh.html",
    "href": "blog-2023/Blog-2-submissions/Atefeha1995/AnisiAtefeh.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth.\n\nI finished reading Happy Git and GitHub for the use R, chapter 4. Creating a GitHub account is covered in the fourth chapter. I already had a little basic knowledge of Git and GitHub, but I’m always looking to learn more. Everyone can register at GitHub for free from here. I discovered that a GitHub username should:\n\nInclude real name and be original, brief, and simple to read.\nnot be tied to time, the school’s name, etc.\nnot include uppercase and lowercase letters, use hyphens to separate words.\nbe a good username while you can modify your username anytime later.\n\nGitHub provides unlimited free private repositories with a maximum of three external collaborators. If you are an academic member, educational/research staff member, or student, you can also take advantage of GitHub Education. formally recognized charities and nonprofits can benefit from GitHub for Good. You must purchase plans with a number of advanced features if you require private repositories with more than three external collaborators.Current plans and pricing information is available here.\n\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?.\n\nMost of the time, in our team projects, we face challenges that can be avoided by using GitHub. For example, in a team project I am currently working on, we upload our updated presentations in a shared Box folder. We created different sub folders for different collaborators, and each member should upload her/ his files in a specific folder mentioning its date and time. Now all of these files can be uploaded to a private repository, and everyone in the team can see changes with their related date and time and the member who made those changes. In this way, every document can be accessible easier for all the team members, and later, the team can make this repository public if possible, and others can also use the information you found and not reinvent the wheel.\n\nGive an example of one new git feature that you learned about from Jenny Bryan’s book..\n\nI could not read all the chapters from the book, but it is very interesting that I found that GitHub can be connected with Rstudio. We can easily use these two for our projects. Regarding chapter 15 in the book, it seems that we can make changes in R studio and then commit the changes to the local repository, and then we can push our local changes to GitHub."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/anphan0828/PhanAn.html",
    "href": "blog-2023/Blog-2-submissions/anphan0828/PhanAn.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth.\n\nI chose chapter 9: Personal access token for HTTPS to read because I was having trouble with it when I first approached Git and GitHub.\nThe chapter talks about how a user can connect to GitHub remotely from their local computer since a regular password is no longer accepted as a credential. There are two protocols, HTTPS and SSH, and HTTPs is actually recommended by GitHub. Either protocol works independently with any repository. The chapter lists instructions to generate and use personal access token (PAT) both on the website and from R. There are ways to store the PAT (which I personally was so frustrated with losing it all the time) via some R packages. Last but not least, the chapter discusses frequently occurred problems and solutions.\n\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?.\n\nVersion conflicts are annoying and almost inevitable for any projects with collaborations. Even with personal projects, I found myself (a lot of times) rewriting what I have already done a few weeks ago because I did not keep track of the versions. That is when Git comes to the rescue and it forces me to organize my projects better.\nFor collaborative projects, each of us figures that we should clone the repo, then create a branch for our own local copy to add changes. Without a branch, conflicts occur if the master copy of file.txt had been modified by user A (after user B cloned it) but user B later pushes another modified file.txt to remote. Git would then require user B to pull before pushing their version, but that would overwrite their copy they want to push, causing so many problems. We actually learn git branching on a website: learngitbranching.js.org to, once and for all, sort this problem out with Git. The website is highly interactive and explains how Git works in a convenient way for user.\nFor personal projects, I used to not keep track of the versions, i.e., just modify the script repeatedly, which is not a good practice. My PI suggested that I upload my project/software to GitHub and also to PyPI (so that it can be installed in Python) for transparency and version control. It was tough getting to know Git but worth it. I mainly use Git locally and just push the files I want to the remote repository. Now all of the previous versions are stored in Git and I can access them anytime. Furthermore, I now know that I can do all such stuff within RStudio (I have only used Git in the terminal)\n\nGive an example of one new git feature that you learned about from Jenny Bryan’s book.\n\nStoring and viewing PAT using R is definitely helpful, which cannot be done on the GitHub website. I still do not know why GitHub does not allow it, maybe for security reason, but I am glad gitcreds lets me see my PAT anytime. I added an Rmarkdown file MyExample.Rmd where I tried to store and view my current PAT"
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/hardtme/HardtMarieBlog2.html",
    "href": "blog-2023/Blog-2-submissions/hardtme/HardtMarieBlog2.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth.\n\nI read Chapter 12: Connect RStudio to Git/GitHub. To have RStudio and GitHub communicate with each other, you should start with a new repository on GitHub that is initialized with a README. Then you need to copy a link to the GitHub repository, either HTTPS or SSH (whichever you prefer). Once everything is set up in GitHub, you move to RStudio and create a new project with version control. Then you paste the URL for your GitHub repository into the “Repository URL” box in RStudio and finish the project creation process. Assuming everything went smoothly, you should be able to see the README.md file from GitHub in your RStudio project. To further make sure everything is set up correctly, you can change the README.md file in RStudio, commit the changes, and push them to GitHub. If the changes appear in GitHub online, you’re good to go!\n\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?.\n\nI have experienced a common inconvenience in several group projects and group homework assignments in my graduate statistics classes. The assignments usually involved writing a report or showing our work and including R code. If there hadn’t been the requirement to include R code, we probably would have used a collaboration tool like Overleaf to write the report. Since we also had to include working R code, this meant the groups preferred to work with RMarkdown files. After deciding which group member would type each question, we would each work on our own individual RMarkdown file, send them to each other when we were finished with our work, and then copy and paste everyone’s work into one file for submission. Using git would have been a lot easier because all group members could have been able to see each other’s work sooner. Combining the work into one file also would have been much simpler with git.\n\nGive an example of one new git feature that you learned about from Jenny Bryan’s book.. I learned that you can connect RStudio to GitHub using HTTPS instead of SSH. When I last worked with RStudio and GitHub together (a few years ago), I thought you could only connect the two using SSH. The HTTPS method seems much easier."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/santos-cl/dosSantosCaio.html",
    "href": "blog-2023/Blog-2-submissions/santos-cl/dosSantosCaio.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "In the 30th Happy git with R, Jane Bryan describes how one can use GitHub to time travel. Although she does not mean actual time travel, she describes a particularly useful feature of Git: the ability too look at previous versions of one’s code. There a multiple instances in which this would be useful. For instance, one might want to refer back to the color scheme used in one of the previous drafts of a manuscript; or worse, one might have to convert their barplot to a boxplot after arguing with their advisor that the boxplot was the better option from the beginning. In summary, regardless of why one would have to refer back to previous version of their code, Git facilitates this process."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/santos-cl/dosSantosCaio.html#new-git-features-from-the-book",
    "href": "blog-2023/Blog-2-submissions/santos-cl/dosSantosCaio.html#new-git-features-from-the-book",
    "title": "Happy Git with R",
    "section": "New git features from the book",
    "text": "New git features from the book\nI was not familiar with the idea that one could refer other people to a specific version of a repository just by providing them with the hyperlink. This is fascinating, as project discussions could be much more effective since collaborators could simply say: I believe this aspect of the project worked better in version XX.XX, follow this link to check for yourself what I mean."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/sudi007/SudeshBhagat.html",
    "href": "blog-2023/Blog-2-submissions/sudi007/SudeshBhagat.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth. The chapter I read in-depth was Chapter1, Why Git? Why GitHub? This chapter caught my attention because although one may have used Git, it helps to get a refresher on the precise function of Git, along with its features. It introduces Git and GitHub to a new user in novice terms and with analogies that are easy to understand. The chapter also explains how to get Git working for users, where the first step is to install Git and connect it with GitHub and R. The chapter warns of probable challenges like merging projects when working collaboratively. Special features such as issues and pull request are presented, in addition to information about the benefits of using R with Git and GitHub. Target audience is discussed to help users discern whether Git and GitHub are of use to them.\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?. Version control has been a challenge I have often faced in team projects, leading to working late nights under pressure. For example, for one of the classes last semester, a team of four was working on a project. Each one of us was working on a different aspect of the project which was stored on their local computers. It was then time to combine the various different files and present a final document. It was difficult to combine these individual sets of large files. The resultant document was difficult to understand. Using Git, these files could have been stored on the Git repository, with everyone accessing different sections of the document. This feature would have facilitated such collaboration that more than one person would have been able to see and work on the final combined file.\nGive an example of one new git feature that you learned about from Jenny Bryan’s book.. A new feature that I learned from the book was how it can be combined with RStudio. I use RStudio for my projects. Knowing that RStudio can be combined with Git helps me understand how changes can be made to projects in RStudio and then stored in the Git repository."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/gnbltrn/BeltranGino.html",
    "href": "blog-2023/Blog-2-submissions/gnbltrn/BeltranGino.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "**Summary of Chapter 6. Install Git.\nThis chapter includes instructions on how to install Git Bash. Given that I am new to Github and Git, I found it somewhat confusing at first. I had watched YouTube videos to familiarize myself with github and run into several videos about Git Bash, but did not know what it was, so after I completed the instructions in the book and installed Git in my PC, I then realized they were the same. After reading this chapter in more detail, I learned that Git has multiple names.\nSummary.\ngit –version ## git version 2.39.1\nOption 1 (highly recommended) from the link below (I used this option): https://gitforwindows.org/ Option 2 (recommended): Install Git for Windows via the Chocolatey package manager. I personally did not use this option. choco install git.install\nThe rest of the chapter if for Mac and Linux users, which I didn’t use.\n**Biggest Mishap Experience.\nI have worked on a number of projects, big and small, but I have no experience working on coding or software development projects. It seems to me, git and github apply the concepts of “document control” and “versioning” to coding, which allows the user to have one source of truth while cooperate with others. I have used other tools such as MS Project, SharePoint, SAP/R3, and more recently MS OneDrive for the same purpose of document control and cooperation. I have had no big mishap so far. However, I can mention that when not using these tools, authoring with others, a new document for instance, can be significantly more troublesome and painful. Just having the ability to go back to a previous version can be a life saver.\n**Git Example of One New Feature.\nEverything from Git and the book was new to me, but I can highlight I didn’t know about the capability of R to be connected with github to work in a team environment."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/gnbltrn/BeltranGino.html#prompt",
    "href": "blog-2023/Blog-2-submissions/gnbltrn/BeltranGino.html#prompt",
    "title": "Happy Git with R",
    "section": "Prompt:",
    "text": "Prompt:\ngit and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth.\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?.\nGive an example of one new git feature that you learned about from Jenny Bryan’s book.."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/motinaaa/KashanianMotahareh.html",
    "href": "blog-2023/Blog-2-submissions/motinaaa/KashanianMotahareh.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/motinaaa/KashanianMotahareh.html#chapter-5-install-or-upgrade-r-and-rstudio",
    "href": "blog-2023/Blog-2-submissions/motinaaa/KashanianMotahareh.html#chapter-5-install-or-upgrade-r-and-rstudio",
    "title": "Happy Git with R",
    "section": "Chapter 5: Install or upgrade R and RStudio",
    "text": "Chapter 5: Install or upgrade R and RStudio\n**Install R from here: https://cloud.r-project.org\n**Install RStudio from here: https://www.rstudio.com/products/rstudio/download/preview/\n**Update your R packages: update.packages(ask = FALSE, checkBuilt = TRUE)\nUsing old versions of software can be a hassle. For the best experience, it’s recommended to be on 4.something in R at this point. Keep at least one minor version up-to-date. Two minor versions behind will cause you problems as CRAN no longer supports pre-built binary add-on packages. Preview releases are similar to general releases, but they are used as release candidates in the build-up to new general releases. Preview version includes new features, but it is also very stable and highly usable. RStudio updates much more frequently than R itself. RStudio requires monthly updates, while R requires annual updates.\n\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?. My last project was an interdisciplinary project in collaboration with chemical engineers, and we worked more often asynchronously than synchronously. When it comes to collaborating with distributed teams on projects, there are many challenges that must be overcome. The majority of the time I was unaware of their current changes in their experimental results, which had an effect on my results and added to my workload, as I had to go back and forth all the time to observe what they were doing. It is likely that GitHub could make this process much simpler in many ways, as it could track changes and go back to previous versions of a project, which would make the collaboration much easier.\nGive an example of one new git feature that you learned about from Jenny Bryan’s book.. I Learn more about branches in this book. With Git, users have the option of working on a line that runs parallel to the main files of the project. Branch is the term used to describe these lines. As a feature of Git, branches provide a way for developers to modify the project without having to make any changes to the original version of the code. Whenever a version is being developed, a production quality branch of the code will always be present in the master branch. On the branches, you can test and work on any new features you will be launching and then you can merge them with the main branch as soon as they are ready. With the help of a few Git commands, branching and merging can be done very quickly and easily. There is a possibility that one version of a project may contain a number of different branches as per the requirements of the user."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/maxwellskinner2002/SkinnerMaxwell.html",
    "href": "blog-2023/Blog-2-submissions/maxwellskinner2002/SkinnerMaxwell.html",
    "title": "Stat 585",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth.\n\nThe chapter I read was Chapter 9: Personal access token for HTTPS. The chapter focused on access tokens and the differences and uses between HTTPS versus SSH. Access tokens are important in interacting with remote Git servers like Github. Using credentials like an access token proves we are a specific Github user. Git can communicate with a remote server either through HTTPS or SSH, the different protocols use different credentials. With HTTPS you will use an access token. An access token can be made a number of ways but as simple as using the R function “usethis::create_github_token()” in the command line. SSH keys were talked about in chapter 10.\n\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?.\n\nIn my final project for DS201, my team’s final project was entirely based in Google Colab. While Colab is a great resource for individual work and can be used if one is forced to use Google Drive or similar Google products, it is not great for organizing work accross multiple people. There were many issues that came with storing files in google drive and importing them into a script in Colab. As well, my team couldn’t ever figure out how to correctly mount each individual’s google drive to the project to be able to import things like excel files so we were forced to do the majority of work from just one computer instead of doing work equally accross everyone.\nUsing git would have solved this issue completely. Sharing files and making sure everyone is working with the same version of a file would have been solved simply by using git. Importing something as simple as an excel file is easy as the we can put the script and the excel file in the same folder for easy access. Github has made group projects now an ease. Minimal hiccups when it comes to productivity and having teammates work on the same file from different locations.\n\nGive an example of one new git feature that you learned about from Jenny Bryan’s book..\n\nIn Chapter 9, Jenny talks about the R function “usethis::create_github_token()” which is used to get and store a personal access token. And using a R package such as gitcreds, we can store this generated token locally onto your computer. This is great for working with remote servers and kinds of Github servers that require tokens. As with the changes in July 2020 detailed in this article github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ , the only way to access Git operations is through token authentication."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/Sabrenar/RutledgeSabrena.html",
    "href": "blog-2023/Blog-2-submissions/Sabrenar/RutledgeSabrena.html",
    "title": "Stat 585",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth.\n\nI read chapter 27 titled “The Repeated Amend.” It detailed a method to save several incremental changes to a Git repo in only one commit instead of several commits. This method is analogous to working on a word document and saving a new version after a larger change versus after only a few small changes.\nThe author outlines a workflow for the method then provides a couple work-arounds for common problems. The author’s method is to have several amended commits on the local repo then push a “finalized” commit to the Github repo. The biggest point of this chapter is to NOT push the local repo to the Github repo frequently.\n\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?.\n\nThe biggest mishap I’ve had in team project is updated scripts for the project not being in the same location as the data. Frequently, the data has been in one server, and the finalized data analysis scripts have been on a Github repo. This could have been avoided if there was a some sort of readme file directing readers to the Github in the directory with the data.\n\nGive an example of one new git feature that you learned about from Jenny Bryan’s book..\n\nI learned about Git commands from “Happy Git and Github for the useR.” I have only accessed Github repos from their respective Github websites."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/luobo119/BaiYichuan.html",
    "href": "blog-2023/Blog-2-submissions/luobo119/BaiYichuan.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth.\n\nChapter selected: 29 Pull, but you have local work This chapter introduce how to pull changes from upstream when you have local changes since the last pull. If the local changes do not affect the work from upstream, you can directly use ‘git pull’. If there are overlapped changes between remote and local files, you can either use ‘git stash’ or make a commit, which is preferred by the author. The simplest option is to fetch remote commits and merge them. For the conflicted parts, you need to either pick up one version of the changes or create a hybrid to resolve the conflicts. After using ‘git add’ to mark the files, you could commit and push. Another option is to use ‘git pull –rebase’, which pulls the upstream work in one commit and embodies the local work in another with no merge commits.\n\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?.\n\nWhen working with others, I and my teammates did separate parts but we still looked at each other’s code and made small changes that we thought are necessary. But as time goes by, we forgot the changes we made and there is something we should not change or the code would crash. And it is hard to find out the problem because the code could be long. This can be avoided by using git. We can look at the commit history and it is easier to find which changes are made and which cause the problem.\n\nGive an example of one new git feature that you learned about from Jenny Bryan’s book..\n\n‘git stash’ would be a new feature I never used before. This feature allows you to temporarily store the changes you made locally away. And then you are allowed to use other commands such as ‘git pull’. In the Chapter 29, they use ‘git stash store’ to store the local changes in the stash list and use ‘git stash pop’ to get back the stashed state and apply it to the current state."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/AArabio/ArabioAlexandra.html",
    "href": "blog-2023/Blog-2-submissions/AArabio/ArabioAlexandra.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth.\n\nChapter 22: Branches The concept of branching allows an individual to ‘branch out’ from the main project to explore their own idea without anything happening to the original or main working code. Git works with this concept seamlessly allowing for branches to open and merge back quickly. One can create their own branch, switch between branches, and merge a branch with only a line of code. This chapter also explains how to deal with possible issue that may occur and recognizes that a conflict does not mean a disaster (this is often why we use branches… to avoid disaster). One of the main reasons for branching is to allow for brainstorming, consideration, and implementing new ideas… this is how progress is made.\n\nLooking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?.\n\nThrough majority of the team projects that I have been involved in, the largest mishap occurs from ‘stepping on each others toes’… When working in a group where everyone wants to be able to get something accomplished to achieve the best possible outcome, it can be subjective to each individual. When working on PowerPoint slides or writing a report; people tend to have differences in opinions on what the best layout is or the best wording for certain sentences. This is where I have found the greatest conflict because it becomes difficult if we are all working on the same document to change things without the work of others getting loss in the process and work may get lost. This problem could possibly be able to be avoided using git as it has its own system for backing up previous work, seeing who made changes, and when they were made.\n\nGive an example of one new git feature that you learned about from Jenny Bryan’s book..\n\nI have not read Jenny Bryan’s book previously and found it to be a great resource. Though I knew the general basics of git, I appreciated that the book walked through the processes of learning git and showed it truly as a processes and that confusion is okay and expected. Because of this I learned more about possible errors that could occur throughout the merging process and how to tackle them if they present themselves as issues. I also learned through this book that it is better to start a new project on GitHub first prior to working in a new project in R."
  },
  {
    "objectID": "blog-2023/Blog-2-submissions/Starwiiin/MohammadiarvejehParvin.html",
    "href": "blog-2023/Blog-2-submissions/Starwiiin/MohammadiarvejehParvin.html",
    "title": "Happy Git with R",
    "section": "",
    "text": "git and Github are tools for helping with versioning of files in collaborative efforts as well as archiving entries for your future self. Unfortunately working with git isn’t always completely straightforward. Jenny Bryan’s book “Happy git and github with R” helps with that. The book is available from http://happygitwithr.com/. Have a look over the index and pick one of the chapters for a more in-depth read.\nWrite a blog post answering the following questions:\n\nWrite a short (100-150 words) summary of the chapter you read in-depth. Question 1: (I read the chapter 22, “Branches”)\n\nMy answer: Basically, branching is used to take a detour from the main stream to work on the code without making any instant changes to the source file. This characteristic lets people work at the same time on the project without any conflicts or errors. To use this feature, we should create a new branch. One person may or may not create multiple branches; in this case, the person can use “git checkout” to switch between the branches. One important point is that when we switch to another branch while we are not done with the other branch(es), we should commit the in progress branch temporarily. When we want to resume working on the incomplete branch, we should reset the target branch. It worth to mention that there are different type of resetting such as soft, hard, and mixed that help resetting back to different past stages of the interest. Finally, we can merge the complete branch. If we want to merge more than one branches, it is possible to see the conflict message if we have changed the same part in the both branches. In this situation, we can get the status and check the conflict easily. Also, we always can go back to the previous stages of the branch to check and do the revisions accordingly. 2. Looking back at all of the team projects you have been involved in, describe the biggest mishap you had. Could that have been avoided using git? How?. Question 2: My answer: I think one of the biggest challenge that I experienced during my Ph.D. in team working was that we had to work individually on our ideas and we could not document everyone’s work properly. Also, we did not access to each others works while we were working. Another problem was in the review process of each others work; if one might change something based on another person’s feedback, the change was not tracked easily. The advantage of working with fit is that everyone work in one repository, save everything in one location, always accessible for other team members, easy to review other people’s work, easy to track changes. 3. Give an example of one new git feature that you learned about from Jenny Bryan’s book..\nQuestion 3: My answer: I found the branch option very useful for collaborations! suppose our team is working on a competition which is a classification problem. There is a source code that applied a random forest model and got an average classification performance. Now, I guess that I can improve the model by tuning the hyper parameters with either Bayesian optimization or grid search. I can easily create two branches; one for examination of Bayesian optimization, another for implementation of the grid search. In this case, I can work on the two ideas separately without any changes in the source file, test the both ideas, pick the best one, and merge the final version."
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "The full syllabus is available here"
  },
  {
    "objectID": "schedule.html#course-topics",
    "href": "schedule.html#course-topics",
    "title": "Schedule",
    "section": "Course Topics",
    "text": "Course Topics\n\n\n\nWeek\nTopic\nNotes\n\n\n\n\n1 - 2\nWorking Environment and Review Git, GitHub, and R Markdown\nJan 17  Course intro & syllabus | Collaborations - test case | data: 2015 BRFSS data for Iowa | Code book: BRFSS Codebook 2015\n\n\n \n \nJan 19 Collaborations - test case - part 2 | a solution to the test case\n\n\n \n \nJan 24 tools for collaborations | R Markdown refresher | to add or not to add? that is the git-tion\n\n\n3 - 4\nData structures in R: factors, lists, trees\nJan 26 Results from R & friends | Reviewing elements of the tidyverse: ggplot2, dplyr, tidyr with solutions\n\n\n \n \nJan 31 Reviewing elements of the tidyverse: ggplot2, dplyr, tidyr with solutions\n\n\n \n \nFeb 2 Lab #1\n\n\n \n \nFeb 7 Review of basic R types and structures, first look at lists\n\n\n \n \nFeb 9\n\n\n5\nReview of functional programming, conditionals, loops\nFeb 14\n\n\n \n \nFeb 16 Lab #2\n\n\n6\nSplit-apply-combine strategies with lists\nFeb 21\n\n\n \n \nFeb 23\n\n\n7-8\nPackage system in R\nFeb 28\n\n\n \n \nMar 2 Lab #3\n\n\n \n \nMar 7\n\n\n \n \nMar 9\n\n\n \n \nMar 21\n\n\n9-10\nTesting code & Critical analysis of code\nMar 23\n\n\n \n \nMar 28\n\n\n11\nWeb scraping, working with text: awk and grep (lab week)\nMar 30\n\n\n \n \nApr 4\n\n\n12\nEvent driven programming\nApr 6\n\n\n \n \nApr 11\n\n\n \n \nApr 13\n\n\n13\nParsing data, profiling code\nApr 18\n\n\n \n \nApr 20\n\n\n14\nDatabases\nApr 25\n\n\n \n \nApr 27\n\n\n15, Finals\nProject Presentations\nMay 2\n\n\n \n \nMay 4\n\n\n \n \nMay 11, 12-2pm"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\n\n\nPrompt:\n\n\n\n\n\n\n\n\nPrompt:\n\n\n\n\n\n\n\n\nPrompt:\n\n\n\n\n\n\n\n\nPrompt:\n\n\n\n\n\n\nFeb 16, 2023\n\n\nTitle of your post\n\n\nThe Prompt\n\n\n\n\nFeb 9, 2023\n\n\nTitle of your post\n\n\nThe Prompt\n\n\n\n\nFeb 5, 2023\n\n\nHappy Git with R\n\n\nHarun Celik\n\n\n\n\nFeb 3, 2023\n\n\nHappy Git with R\n\n\nSudesh Bhagat\n\n\n\n\nFeb 2, 2023\n\n\nHappy Git with R\n\n\nAlexadra Arabio\n\n\n\n\nFeb 2, 2023\n\n\nHappy Git with R\n\n\nAtefeh Anisi\n\n\n\n\nFeb 2, 2023\n\n\nHappy Git with R\n\n\nHaoming Wang\n\n\n\n\nFeb 2, 2023\n\n\nHappy Git with R\n\n\nIan Parzyszek\n\n\n\n\nFeb 2, 2023\n\n\nPrompt:\n\n\nSabrena Rutledge\n\n\n\n\nFeb 2, 2023\n\n\nHappy Git with R\n\n\nParvin Mohammadiarvejeh\n\n\n\n\nFeb 2, 2023\n\n\nHappy Git with R\n\n\nAn Phan\n\n\n\n\nFeb 2, 2023\n\n\nHappy Git with R\n\n\nYour Name\n\n\n\n\nFeb 2, 2023\n\n\nHappy Git with R\n\n\nCharch\n\n\n\n\nFeb 2, 2023\n\n\nHappy Git with R\n\n\nNot Charlie\n\n\n\n\nFeb 2, 2023\n\n\nHappy Git with R\n\n\nGino Beltran\n\n\n\n\nFeb 2, 2023\n\n\nHappy Git with R\n\n\nMarie Hardt\n\n\n\n\nFeb 2, 2023\n\n\nHappy Git with R\n\n\nKelly Nascimento Thompson\n\n\n\n\nFeb 2, 2023\n\n\nHappy Git with R\n\n\nLogan Johnson\n\n\n\n\nFeb 2, 2023\n\n\nHappy Git with R\n\n\nYCB\n\n\n\n\nFeb 2, 2023\n\n\nHappy Git with R\n\n\nMatt Kavanaugh\n\n\n\n\nFeb 2, 2023\n\n\nHappy Git with R\n\n\nMotina\n\n\n\n\nFeb 2, 2023\n\n\nHappy Git with R\n\n\nSomebody\n\n\n\n\nFeb 2, 2023\n\n\nHappy Git with R\n\n\nValerie Han\n\n\n\n\nFeb 2, 2023\n\n\nHappy Git with R\n\n\nYingchao Zhou\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nAlexandra Arabio\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nAnisi Atefeh\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nHaoming Wang\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nCelik Harun\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nIan Parzyszek\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nLandon Getting\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nSabrena Rutledge\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nParvin Mohammadiarvejeh\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nTyler Wiederich\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nAn Pham\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nAnyesha Ray\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nCharchit Shukla\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nCharlie Bonk\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nDenise Bradford\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nGino Beltran\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nMarie Hardt\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nKelly Nascimento Thompson\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nKundan Kumar\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nLogan Johnson\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nYichuan Bai\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nMatt Kavanaugh\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nMotahareh Kashanian\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nCaio dos Santos\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nBhagat Sudesh\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nValerie Han\n\n\n\n\nJan 26, 2023\n\n\nAsking Good Questions\n\n\nYingchao Zhou\n\n\n\n\n\n\nNo matching items"
  }
]